/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on Feb 2, 2011, 11:32:52 AM
 */


import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.*;
import java.util.*;
import java.lang.Math.*;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.*;
import javax.imageio.ImageIO;
import java.awt.image.*;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author jacquelinedouglass
 */
public class NewJFrame extends javax.swing.JApplet {

    public int modifiedScalingType = 1;             //default is "charge On"
    public boolean modifiedPositionCenter = true;           //default is "Center"
    public boolean includeModifiedPosition = true;
    public boolean calculateFreq = true;
    public boolean charactersOn = true;
    public boolean showFavored = true;
    public boolean colorBackgroundChanged = false;
    JPanel myPanel;
    JPanel probPanel;
    ChartPanel pvPanel;
    double[] groupBgFreq;
    double[][] probMatrix;
    double[][] Pvalues;
    ArrayList<String> groupings;
    char[] aa = {'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'Y'};
    int lengthSeq;
    public Color darkOrange = new Color(255, 153, 0);
    public Color darkGreen = new Color(0, 153, 51);
    public Color darkPink = new Color(255, 102, 153);
    public Color purple = new Color(153, 0, 204);
    HashMap<Integer, Color> colorHM = new HashMap<Integer, Color>();
    public Color colorOfBackground = Color.white;
    public Color colorOfAxes = Color.black;
    public Color colorOfModified = Color.black;
    public int frameHeight = 1050;
    public int frameWidth = 1200;
    //public boolean newFrame = true;

    /** Creates new form NewJFrame */
    public NewJFrame() {


        initComponents();

        //Set default colors to "none" no groups colors
        color1.setForeground(darkGreen);
        Tf1s.setForeground(darkGreen);
        colorHM.put(1, darkGreen);

        color2.setForeground(darkPink);
        Tf2s.setForeground(darkPink);
        colorHM.put(2, darkPink);

        color3.setForeground(Color.red);
        Tf3s.setForeground(Color.red);
        colorHM.put(3, Color.red);

        color4.setForeground(Color.red);
        Tf4s.setForeground(Color.red);
        colorHM.put(4, Color.red);

        color5.setForeground(Color.darkGray);
        Tf5s.setForeground(Color.darkGray);
        colorHM.put(5, Color.darkGray);

        color6.setForeground(darkOrange);
        Tf6s.setForeground(darkOrange);
        colorHM.put(6, darkOrange);

        color7.setForeground(Color.blue);
        Tf7s.setForeground(Color.blue);
        colorHM.put(7, Color.blue);

        color8.setForeground(darkGreen);
        Tf8s.setForeground(darkGreen);
        colorHM.put(8, darkGreen);

        color9.setForeground(Color.blue);
        Tf9s.setForeground(Color.blue);
        colorHM.put(9, Color.blue);

        color10.setForeground(darkGreen);
        Tf10s.setForeground(darkGreen);
        colorHM.put(10, darkGreen);

        color11.setForeground(darkGreen);
        Tf11s.setForeground(darkGreen);
        colorHM.put(11, darkGreen);

        color12.setForeground(purple);
        Tf12s.setForeground(purple);
        colorHM.put(12, purple);

        color13.setForeground(Color.darkGray);
        Tf13s.setForeground(Color.darkGray);
        colorHM.put(13, Color.darkGray);

        color14.setForeground(purple);
        Tf14s.setForeground(purple);
        colorHM.put(14, purple);

        color15.setForeground(Color.blue);
        Tf15s.setForeground(Color.blue);
        colorHM.put(15, Color.blue);

        color16.setForeground(Color.gray);
        Tf16s.setForeground(Color.gray);
        colorHM.put(16, Color.gray);

        color17.setForeground(Color.gray);
        Tf17s.setForeground(Color.gray);
        colorHM.put(17, Color.gray);

        color18.setForeground(darkGreen);
        Tf18s.setForeground(darkGreen);
        colorHM.put(18, darkGreen);

        color19.setForeground(Color.darkGray);
        Tf19s.setForeground(Color.darkGray);
        colorHM.put(19, Color.darkGray);

        color20.setForeground(Color.darkGray);
        Tf20s.setForeground(Color.darkGray);
        colorHM.put(20, Color.darkGray);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
//        scrollPane = new javax.swing.JScrollPane();
        backgroundPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        RatButton = new javax.swing.JRadioButton();
        EquiprobableButton = new javax.swing.JRadioButton();
        HumanButton = new javax.swing.JRadioButton();
        CustomFreqButton = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        LabelY = new javax.swing.JLabel();
        LabelL = new javax.swing.JLabel();
        LabelK = new javax.swing.JLabel();
        LabelW = new javax.swing.JLabel();
        LabelV = new javax.swing.JLabel();
        LabelT = new javax.swing.JLabel();
        LabelI = new javax.swing.JLabel();
        LabelH = new javax.swing.JLabel();
        LabelG = new javax.swing.JLabel();
        LabelS = new javax.swing.JLabel();
        LabelR = new javax.swing.JLabel();
        LabelF = new javax.swing.JLabel();
        LabelE = new javax.swing.JLabel();
        LabelD = new javax.swing.JLabel();
        LabelQ = new javax.swing.JLabel();
        LabelP = new javax.swing.JLabel();
        LabelC = new javax.swing.JLabel();
        LabelN = new javax.swing.JLabel();
        LabelA = new javax.swing.JLabel();
        LabelM = new javax.swing.JLabel();
        BgFreqTF1 = new javax.swing.JTextField();
        BgFreqTF2 = new javax.swing.JTextField();
        BgFreqTF3 = new javax.swing.JTextField();
        BgFreqTF10 = new javax.swing.JTextField();
        BgFreqTF9 = new javax.swing.JTextField();
        BgFreqTF8 = new javax.swing.JTextField();
        BgFreqTF4 = new javax.swing.JTextField();
        BgFreqTF5 = new javax.swing.JTextField();
        BgFreqTF6 = new javax.swing.JTextField();
        BgFreqTF7 = new javax.swing.JTextField();
        BgFreqTF11 = new javax.swing.JTextField();
        BgFreqTF12 = new javax.swing.JTextField();
        BgFreqTF13 = new javax.swing.JTextField();
        BgFreqTF14 = new javax.swing.JTextField();
        BgFreqTF15 = new javax.swing.JTextField();
        BgFreqTF16 = new javax.swing.JTextField();
        BgFreqTF17 = new javax.swing.JTextField();
        BgFreqTF18 = new javax.swing.JTextField();
        BgFreqTF19 = new javax.swing.JTextField();
        BgFreqTF20 = new javax.swing.JTextField();
        sumValueLabel = new javax.swing.JLabel();
        SumFreqButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        FromInputButton = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        NoneButton = new javax.swing.JRadioButton();
        ChargeButton = new javax.swing.JRadioButton();
        CustomGroupButton = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        g20 = new javax.swing.JTextField();
        g19 = new javax.swing.JTextField();
        g18 = new javax.swing.JTextField();
        g17 = new javax.swing.JTextField();
        g16 = new javax.swing.JTextField();
        g15 = new javax.swing.JTextField();
        g14 = new javax.swing.JTextField();
        g13 = new javax.swing.JTextField();
        g12 = new javax.swing.JTextField();
        g11 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        g10 = new javax.swing.JTextField();
        g9 = new javax.swing.JTextField();
        g8 = new javax.swing.JTextField();
        g7 = new javax.swing.JTextField();
        g6 = new javax.swing.JTextField();
        g5 = new javax.swing.JTextField();
        g4 = new javax.swing.JTextField();
        g3 = new javax.swing.JTextField();
        g2 = new javax.swing.JTextField();
        g1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        color1 = new javax.swing.JButton();
        color2 = new javax.swing.JButton();
        color3 = new javax.swing.JButton();
        color4 = new javax.swing.JButton();
        color5 = new javax.swing.JButton();
        color6 = new javax.swing.JButton();
        color7 = new javax.swing.JButton();
        color8 = new javax.swing.JButton();
        color9 = new javax.swing.JButton();
        color10 = new javax.swing.JButton();
        color11 = new javax.swing.JButton();
        color12 = new javax.swing.JButton();
        color13 = new javax.swing.JButton();
        color14 = new javax.swing.JButton();
        color15 = new javax.swing.JButton();
        color16 = new javax.swing.JButton();
        color17 = new javax.swing.JButton();
        color18 = new javax.swing.JButton();
        color19 = new javax.swing.JButton();
        color20 = new javax.swing.JButton();
        Tf1s = new javax.swing.JComboBox();
        Tf2s = new javax.swing.JComboBox();
        Tf3s = new javax.swing.JComboBox();
        Tf4s = new javax.swing.JComboBox();
        Tf5s = new javax.swing.JComboBox();
        Tf6s = new javax.swing.JComboBox();
        Tf7s = new javax.swing.JComboBox();
        Tf8s = new javax.swing.JComboBox();
        Tf9s = new javax.swing.JComboBox();
        Tf10s = new javax.swing.JComboBox();
        Tf11s = new javax.swing.JComboBox();
        Tf12s = new javax.swing.JComboBox();
        Tf13s = new javax.swing.JComboBox();
        Tf14s = new javax.swing.JComboBox();
        Tf15s = new javax.swing.JComboBox();
        Tf16s = new javax.swing.JComboBox();
        Tf17s = new javax.swing.JComboBox();
        Tf18s = new javax.swing.JComboBox();
        Tf19s = new javax.swing.JComboBox();
        Tf20s = new javax.swing.JComboBox();
        ReplaceSizeButton = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SequenceInput = new javax.swing.JTextArea();
        jLabel23 = new javax.swing.JLabel();
        numPeptideLabel = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        peptideLengthLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        ScalingOff = new javax.swing.JRadioButton();
        ScalingOn = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        YesModifiedButton = new javax.swing.JRadioButton();
        NoModifiedButton = new javax.swing.JRadioButton();
        CustomModifiedButton = new javax.swing.JRadioButton();
        CenterModifiedButton = new javax.swing.JRadioButton();
        CustomModifiedTF = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        colorChooserBackground = new javax.swing.JButton();
        colorChooserAxes = new javax.swing.JButton();
        colorChooserModified = new javax.swing.JButton();
        AAAlphaTF = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        charactersButton = new javax.swing.JRadioButton();
        barsButton = new javax.swing.JRadioButton();
        jLabel26 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        CreateLogo = new javax.swing.JButton();
        exportButton = new javax.swing.JButton();
        LogoTabPane = new javax.swing.JTabbedPane();
        LogoOutput = new javax.swing.JPanel();
        LogoOutput2 = new javax.swing.JPanel();
        ExportICLogo = new javax.swing.JButton();
        FreqOutput = new javax.swing.JPanel();
        FreqOutput2 = new javax.swing.JPanel();
        ExportFreqLogo = new javax.swing.JButton();
        PvalueOutput = new javax.swing.JPanel();
        PvalueOutput2 = new javax.swing.JPanel();
        ExportPvalueGraph = new javax.swing.JButton();

//        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonGroup1.add(RatButton);
        RatButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        RatButton.setText("Rat");
        RatButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RatButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(EquiprobableButton);
        EquiprobableButton.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        EquiprobableButton.setText("Equiprobable");
        EquiprobableButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EquiprobableButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(HumanButton);
        HumanButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        HumanButton.setText("Human");
        HumanButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HumanButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(CustomFreqButton);
        CustomFreqButton.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        CustomFreqButton.setText("Custom");
        CustomFreqButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomFreqButtonActionPerformed(evt);
            }
        });

        LabelY.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelY.setText("Y");

        LabelL.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelL.setText("L");

        LabelK.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelK.setText("K");

        LabelW.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelW.setText("W");

        LabelV.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelV.setText("V");

        LabelT.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelT.setText("R");

        LabelI.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelI.setText("I");

        LabelH.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelH.setText("H");

        LabelG.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelG.setText("G");

        LabelS.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelS.setText("T");

        LabelR.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelR.setText("S");

        LabelF.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelF.setText("F");

        LabelE.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelE.setText("E");

        LabelD.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelD.setText("D");

        LabelQ.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelQ.setText("Q");

        LabelP.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelP.setText("P");

        LabelC.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelC.setText("C");

        LabelN.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelN.setText("N");

        LabelA.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelA.setText("A");

        LabelM.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        LabelM.setText("M");

        BgFreqTF4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BgFreqTF4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER).addComponent(LabelA).addComponent(LabelC).addComponent(LabelD).addComponent(LabelE).addComponent(LabelF).addComponent(LabelG).addComponent(LabelH).addComponent(LabelI).addComponent(LabelK)).addComponent(LabelL)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(BgFreqTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF10, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(12, 12, 12).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER).addComponent(LabelW).addComponent(LabelV).addComponent(LabelS).addComponent(LabelR).addComponent(LabelT).addComponent(LabelQ).addComponent(LabelP).addComponent(LabelN).addComponent(LabelM).addComponent(LabelY)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(BgFreqTF19, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF11, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF13, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF14, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF15, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF16, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF17, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF18, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(BgFreqTF20, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(LabelA).addComponent(BgFreqTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(LabelC).addComponent(BgFreqTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(LabelD).addComponent(BgFreqTF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelF)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelG)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelH)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelI)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelK)).addGap(8, 8, 8).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelL))).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelM)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelN)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelP)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelQ)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelT)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelR)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelS)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelV)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelW)).addGap(8, 8, 8).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(BgFreqTF20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(LabelY)))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        sumValueLabel.setText("  ");

        SumFreqButton.setText("Sum:");
        SumFreqButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumFreqButtonActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 2, 12));
        jLabel13.setText(" Should sum to 100.");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel11.setText("AA Reference Probabilities:    ");

        buttonGroup1.add(FromInputButton);
        FromInputButton.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        FromInputButton.setSelected(true);
        FromInputButton.setText("From Input");
        FromInputButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromInputButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(FromInputButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EquiprobableButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(SumFreqButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sumValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel13))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                                .addComponent(RatButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HumanButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CustomFreqButton, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                        .addGap(5, 5, 5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RatButton)
                    .addComponent(HumanButton)
                    .addComponent(CustomFreqButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FromInputButton)
                    .addComponent(EquiprobableButton))
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sumValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SumFreqButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonGroup2.add(NoneButton);
        NoneButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        NoneButton.setSelected(true);
        NoneButton.setText("None");
        NoneButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoneButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(ChargeButton);
        ChargeButton.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        ChargeButton.setText("Charge");
        ChargeButton.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ChargeButtonItemStateChanged(evt);
            }
        });
        ChargeButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChargeButtonActionPerformed(evt);
            }
        });

        buttonGroup2.add(CustomGroupButton);
        CustomGroupButton.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        CustomGroupButton.setText("Custom");
        CustomGroupButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomGroupButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel5.setText("Symbol");

        g20.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g20.setText("Y");
        g20.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g20ActionPerformed(evt);
            }
        });

        g19.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g19.setText("W");

        g18.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g18.setText("V");

        g17.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g17.setText("T");

        g16.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g16.setText("S");

        g15.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g15.setText("R");

        g14.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g14.setText("Q");

        g13.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g13.setText("P");

        g12.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g12.setText("N");
        g12.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g12ActionPerformed(evt);
            }
        });

        g11.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g11.setText("M");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel7.setText("Groups");

        g10.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g10.setText("L");

        g9.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g9.setText("K");

        g8.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g8.setText("I");

        g7.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g7.setText("H");

        g6.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g6.setText("G");

        g5.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g5.setText("F");
        g5.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g5ActionPerformed(evt);
            }
        });

        g4.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g4.setText("E");

        g3.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g3.setText("D");

        g2.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g2.setText("C");

        g1.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        g1.setText("A");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel3.setText("Symbol");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel2.setText("Groups");

        color1.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color1.setText("color");
        color1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color1ActionPerformed(evt);
            }
        });

        color2.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color2.setText("color");
        color2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color2ActionPerformed(evt);
            }
        });

        color3.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color3.setText("color");
        color3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color3ActionPerformed(evt);
            }
        });

        color4.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color4.setText("color");
        color4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color4ActionPerformed(evt);
            }
        });

        color5.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color5.setText("color");
        color5.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color5ActionPerformed(evt);
            }
        });

        color6.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color6.setText("color");
        color6.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color6ActionPerformed(evt);
            }
        });

        color7.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color7.setText("color");
        color7.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color7ActionPerformed(evt);
            }
        });

        color8.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color8.setText("color");
        color8.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color8ActionPerformed(evt);
            }
        });

        color9.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color9.setText("color");
        color9.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color9ActionPerformed(evt);
            }
        });

        color10.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color10.setText("color");
        color10.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color10ActionPerformed(evt);
            }
        });

        color11.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color11.setText("color");
        color11.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color11ActionPerformed(evt);
            }
        });

        color12.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color12.setText("color");
        color12.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color12ActionPerformed(evt);
            }
        });

        color13.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color13.setText("color");
        color13.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color13ActionPerformed(evt);
            }
        });

        color14.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color14.setText("color");
        color14.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color14ActionPerformed(evt);
            }
        });

        color15.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color15.setText("color");
        color15.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color15ActionPerformed(evt);
            }
        });

        color16.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color16.setText("color");
        color16.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color16ActionPerformed(evt);
            }
        });

        color17.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color17.setText("color");
        color17.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color17ActionPerformed(evt);
            }
        });

        color18.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color18.setText("color");
        color18.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color18ActionPerformed(evt);
            }
        });

        color19.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color19.setText("color");
        color19.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color19ActionPerformed(evt);
            }
        });

        color20.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        color20.setText("color");
        color20.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color20ActionPerformed(evt);
            }
        });

        Tf1s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf1s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf1s.setSelectedIndex(1);

        Tf2s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf2s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf2s.setSelectedIndex(3);

        Tf3s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf3s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf3s.setSelectedIndex(4);
        Tf3s.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tf3sActionPerformed(evt);
            }
        });

        Tf4s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf4s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf4s.setSelectedIndex(5);

        Tf5s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf5s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf5s.setSelectedIndex(6);

        Tf6s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf6s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf6s.setSelectedIndex(7);

        Tf7s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf7s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf7s.setSelectedIndex(8);

        Tf8s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf8s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf8s.setSelectedIndex(9);

        Tf9s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf9s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf9s.setSelectedIndex(11);

        Tf10s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf10s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf10s.setSelectedIndex(12);

        Tf11s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf11s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf11s.setSelectedIndex(13);

        Tf12s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf12s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf12s.setSelectedIndex(14);

        Tf13s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf13s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf13s.setSelectedIndex(16);

        Tf14s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf14s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf14s.setSelectedIndex(17);

        Tf15s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf15s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf15s.setSelectedIndex(18);

        Tf16s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf16s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf16s.setSelectedIndex(19);

        Tf17s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf17s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf17s.setSelectedIndex(20);

        Tf18s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf18s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf18s.setSelectedIndex(22);

        Tf19s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf19s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf19s.setSelectedIndex(23);

        Tf20s.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        Tf20s.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"-", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "\u0393", "\u0394", "\u0398", "\u039B", "\u039E", "\u03A0", "\u03A3", "\u03A6", "\u03A8", "\u03A9", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}));
        Tf20s.setSelectedIndex(25);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(g10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addComponent(g9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addComponent(g8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addComponent(g7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addComponent(g6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addComponent(g5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addComponent(g4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addComponent(g2, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addComponent(g3, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE).addGroup(jPanel6Layout.createSequentialGroup().addGap(8, 8, 8).addComponent(jLabel2)).addComponent(g1, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(Tf1s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf2s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf3s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf4s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf5s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf6s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf7s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf8s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf9s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf10s, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER).addComponent(color1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color7, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color9, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(43, 43, 43).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel7).addComponent(g20, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g19, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g18, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g17, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g16, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g15, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g14, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g13, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g12, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE).addComponent(g11, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)).addGap(18, 18, 18).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(Tf11s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf12s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf13s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf14s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf15s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf16s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf17s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf18s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf19s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf20s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(color11, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color12, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color13, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color14, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color15, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color16, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color17, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color18, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color19, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color20, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))).addComponent(jLabel5)).addGap(20, 20, 20)).addGroup(jPanel6Layout.createSequentialGroup().addGap(76, 76, 76).addComponent(jLabel3).addContainerGap(348, Short.MAX_VALUE)));
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addContainerGap().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel7).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf11s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color11)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf12s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color12)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf13s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color13)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf14s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color14)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf15s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color15)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf16s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color16)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf17s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color17)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf18s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color18)).addGap(8, 8, 8).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf19s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color19)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(Tf20s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color20))).addGroup(jPanel6Layout.createSequentialGroup().addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color1).addComponent(Tf1s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color2).addComponent(Tf2s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color3).addComponent(Tf3s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color4).addComponent(Tf4s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color5).addComponent(Tf5s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color6).addComponent(Tf6s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color7).addComponent(Tf7s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color8).addComponent(Tf8s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(8, 8, 8).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color9).addComponent(Tf9s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(g10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(color10).addComponent(Tf10s, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))).addContainerGap()));

        buttonGroup2.add(ReplaceSizeButton);
        ReplaceSizeButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        ReplaceSizeButton.setText("Size");
        ReplaceSizeButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReplaceSizeButtonActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 2, 12));
        jLabel16.setText("Must use all 20 AAs once: ACDEFGHIKLMNPQRSTVWY.");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 2, 12));
        jLabel17.setText("Do not repeat symbols.");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel9.setText("AA Groupings:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel9).addGroup(jPanel3Layout.createSequentialGroup().addComponent(NoneButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(ChargeButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(ReplaceSizeButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(CustomGroupButton)).addGroup(jPanel3Layout.createSequentialGroup().addComponent(jLabel16).addGap(18, 18, 18).addComponent(jLabel17)).addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup().addContainerGap().addComponent(jLabel9).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(ChargeButton).addComponent(ReplaceSizeButton).addComponent(CustomGroupButton).addComponent(NoneButton)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel17).addComponent(jLabel16)).addGap(1128, 1128, 1128)));

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel1.setText("Input centered peptide sequences:");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 2, 12));
        jLabel12.setText("Input at least 2 sequences.");

        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 2, 12));
        jLabel4.setText("Must be all the same length,");

        SequenceInput.setColumns(20);
        SequenceInput.setFont(new Font("Monospaced", Font.PLAIN, 12));
        SequenceInput.setRows(5);
        jScrollPane1.setViewportView(SequenceInput);

        jLabel23.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        jLabel23.setText("Number of Peptides:");

        numPeptideLabel.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        numPeptideLabel.setText(" ");

        jLabel24.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        jLabel24.setText("Peptide Length:");

        peptideLengthLabel.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        peptideLengthLabel.setText("  ");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 2, 12));
        jLabel8.setText("and at least 6 amino acids long.");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE)).addGroup(jPanel5Layout.createSequentialGroup().addGap(13, 13, 13).addComponent(jLabel1)).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel24).addGap(10, 10, 10).addComponent(peptideLengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel23).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(numPeptideLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel8)).addGroup(jPanel5Layout.createSequentialGroup().addContainerGap().addComponent(jLabel12))).addContainerGap()));
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel5Layout.createSequentialGroup().addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(1, 1, 1).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(peptideLengthLabel).addComponent(jLabel24)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel23).addComponent(numPeptideLabel)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel12).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setPreferredSize(new java.awt.Dimension(260, 470));

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel10.setText("Adjust Modified Ref. Probabilities: ");

        buttonGroup5.add(ScalingOff);
        ScalingOff.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        ScalingOff.setText("Off");
        ScalingOff.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScalingOffActionPerformed(evt);
            }
        });

        buttonGroup5.add(ScalingOn);
        ScalingOn.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        ScalingOn.setSelected(true);
        ScalingOn.setText("On");
        ScalingOn.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScalingOnActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel14.setText("Position of Modified Residue:");

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel18.setText("Include Modified Residue:");

        buttonGroup3.add(YesModifiedButton);
        YesModifiedButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        YesModifiedButton.setSelected(true);
        YesModifiedButton.setText("Yes");
        YesModifiedButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YesModifiedButtonActionPerformed(evt);
            }
        });

        buttonGroup3.add(NoModifiedButton);
        NoModifiedButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        NoModifiedButton.setText("No");
        NoModifiedButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoModifiedButtonActionPerformed(evt);
            }
        });

        buttonGroup4.add(CustomModifiedButton);
        CustomModifiedButton.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        CustomModifiedButton.setText("Custom:");
        CustomModifiedButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomModifiedButtonActionPerformed(evt);
            }
        });

        buttonGroup4.add(CenterModifiedButton);
        CenterModifiedButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        CenterModifiedButton.setSelected(true);
        CenterModifiedButton.setText("Center");
        CenterModifiedButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CenterModifiedButtonActionPerformed(evt);
            }
        });

        CustomModifiedTF.setEnabled(false);
        CustomModifiedTF.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        CustomModifiedTF.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomModifiedTFActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel15.setText("Color Options:");

        colorChooserBackground.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        colorChooserBackground.setText("background color");
        colorChooserBackground.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorChooserBackgroundActionPerformed(evt);
            }
        });

        colorChooserAxes.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        colorChooserAxes.setText("axes color");
        colorChooserAxes.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorChooserAxesActionPerformed(evt);
            }
        });

        colorChooserModified.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        colorChooserModified.setText("modified residue color");
        colorChooserModified.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorChooserModifiedActionPerformed(evt);
            }
        });

        AAAlphaTF.setText("1.000000");
        AAAlphaTF.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        AAAlphaTF.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AAAlphaTFActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel21.setText("Chi-Square Filtering Alpha:");

        jLabel25.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel25.setText("Logo Representation:");

        buttonGroup6.add(charactersButton);
        charactersButton.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        charactersButton.setSelected(true);
        charactersButton.setText("Characters");
        charactersButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                charactersButtonActionPerformed(evt);
            }
        });

        buttonGroup6.add(barsButton);
        barsButton.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        barsButton.setText("Bars");
        barsButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barsButtonActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Lucida Grande", 1, 12));
        jLabel26.setText("Display:");

        buttonGroup7.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Logo (favored)");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup7.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton2.setText("Anti-Logo (disfavored)");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addContainerGap().addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel4Layout.createSequentialGroup().addGap(10, 10, 10).addComponent(AAAlphaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jRadioButton1).addGroup(jPanel4Layout.createSequentialGroup().addComponent(CenterModifiedButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(CustomModifiedButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(CustomModifiedTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(jPanel4Layout.createSequentialGroup().addComponent(YesModifiedButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(NoModifiedButton)).addComponent(jLabel15).addGroup(jPanel4Layout.createSequentialGroup().addGap(10, 10, 10).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(colorChooserBackground, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(colorChooserAxes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(colorChooserModified, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addComponent(jLabel18).addComponent(jLabel14).addComponent(jLabel10).addGroup(jPanel4Layout.createSequentialGroup().addComponent(ScalingOn).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(ScalingOff)).addGroup(jPanel4Layout.createSequentialGroup().addComponent(charactersButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(barsButton)).addComponent(jRadioButton2).addComponent(jLabel26).addComponent(jLabel21).addComponent(jLabel25)).addContainerGap(61, Short.MAX_VALUE)));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel15).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(colorChooserBackground).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(colorChooserAxes).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(colorChooserModified).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel18).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(YesModifiedButton).addComponent(NoModifiedButton)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel14).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(CenterModifiedButton).addComponent(CustomModifiedButton).addComponent(CustomModifiedTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel10).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(ScalingOn).addComponent(ScalingOff)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel21).addGap(4, 4, 4).addComponent(AAAlphaTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel25).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(charactersButton).addComponent(barsButton)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel26).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jRadioButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jRadioButton2).addGap(26, 26, 26)));

        CreateLogo.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        CreateLogo.setText("Create Logos");
        CreateLogo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateLogoActionPerformed(evt);
            }
        });

        exportButton.setFont(new java.awt.Font("Lucida Grande", 0, 12));
        exportButton.setText("Export Data");
        exportButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createSequentialGroup().addComponent(CreateLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(exportButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE).addContainerGap()));
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(CreateLogo).addComponent(exportButton)));

        LogoOutput.setBackground(new java.awt.Color(255, 255, 255));
        LogoOutput.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LogoOutput2.setBackground(new java.awt.Color(255, 255, 255));
        LogoOutput2.setPreferredSize(new java.awt.Dimension(1200, 500));

        javax.swing.GroupLayout LogoOutput2Layout = new javax.swing.GroupLayout(LogoOutput2);
        LogoOutput2.setLayout(LogoOutput2Layout);
        LogoOutput2Layout.setHorizontalGroup(
                LogoOutput2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 1156, Short.MAX_VALUE));
        LogoOutput2Layout.setVerticalGroup(
                LogoOutput2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 467, Short.MAX_VALUE));

        ExportICLogo.setText("Export IC Logo");
        ExportICLogo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportICLogoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LogoOutputLayout = new javax.swing.GroupLayout(LogoOutput);
        LogoOutput.setLayout(LogoOutputLayout);
        LogoOutputLayout.setHorizontalGroup(
                LogoOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(LogoOutputLayout.createSequentialGroup().addContainerGap(1039, Short.MAX_VALUE).addComponent(ExportICLogo).addContainerGap()).addComponent(LogoOutput2, javax.swing.GroupLayout.DEFAULT_SIZE, 1156, Short.MAX_VALUE));
        LogoOutputLayout.setVerticalGroup(
                LogoOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogoOutputLayout.createSequentialGroup().addComponent(LogoOutput2, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(ExportICLogo)));

        LogoTabPane.addTab("Information Content Logo", LogoOutput);

        FreqOutput.setBackground(new java.awt.Color(255, 255, 255));
        FreqOutput.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        FreqOutput2.setBackground(new java.awt.Color(255, 255, 255));
        FreqOutput2.setPreferredSize(new java.awt.Dimension(1200, 500));

        javax.swing.GroupLayout FreqOutput2Layout = new javax.swing.GroupLayout(FreqOutput2);
        FreqOutput2.setLayout(FreqOutput2Layout);
        FreqOutput2Layout.setHorizontalGroup(
                FreqOutput2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 1156, Short.MAX_VALUE));
        FreqOutput2Layout.setVerticalGroup(
                FreqOutput2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 469, Short.MAX_VALUE));

        ExportFreqLogo.setText("Export Frequency Plot");
        ExportFreqLogo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportFreqLogoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FreqOutputLayout = new javax.swing.GroupLayout(FreqOutput);
        FreqOutput.setLayout(FreqOutputLayout);
        FreqOutputLayout.setHorizontalGroup(
                FreqOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FreqOutputLayout.createSequentialGroup().addContainerGap(999, Short.MAX_VALUE).addComponent(ExportFreqLogo).addContainerGap()).addComponent(FreqOutput2, javax.swing.GroupLayout.DEFAULT_SIZE, 1156, Short.MAX_VALUE));
        FreqOutputLayout.setVerticalGroup(
                FreqOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FreqOutputLayout.createSequentialGroup().addComponent(FreqOutput2, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE).addGap(9, 9, 9).addComponent(ExportFreqLogo)));

        LogoTabPane.addTab("Frequency Plot", FreqOutput);

        PvalueOutput.setBackground(new java.awt.Color(255, 255, 255));
        PvalueOutput.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PvalueOutput2.setBackground(new java.awt.Color(255, 255, 255));
        PvalueOutput2.setPreferredSize(new java.awt.Dimension(1200, 500));

        javax.swing.GroupLayout PvalueOutput2Layout = new javax.swing.GroupLayout(PvalueOutput2);
        PvalueOutput2.setLayout(PvalueOutput2Layout);
        PvalueOutput2Layout.setHorizontalGroup(
                PvalueOutput2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 1156, Short.MAX_VALUE));
        PvalueOutput2Layout.setVerticalGroup(
                PvalueOutput2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 467, Short.MAX_VALUE));

        ExportPvalueGraph.setText("Export P-value Graph");
        ExportPvalueGraph.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportPvalueGraphActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PvalueOutputLayout = new javax.swing.GroupLayout(PvalueOutput);
        PvalueOutput.setLayout(PvalueOutputLayout);
        PvalueOutputLayout.setHorizontalGroup(
                PvalueOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PvalueOutputLayout.createSequentialGroup().addContainerGap(1009, Short.MAX_VALUE).addComponent(ExportPvalueGraph).addContainerGap()).addComponent(PvalueOutput2, javax.swing.GroupLayout.DEFAULT_SIZE, 1156, Short.MAX_VALUE));
        PvalueOutputLayout.setVerticalGroup(
                PvalueOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PvalueOutputLayout.createSequentialGroup().addComponent(PvalueOutput2, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(ExportPvalueGraph)));

        LogoTabPane.addTab("Chi-Squared P-value Graph", PvalueOutput);

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
                backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 1187, Short.MAX_VALUE).addGroup(backgroundPanelLayout.createSequentialGroup().addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(backgroundPanelLayout.createSequentialGroup().addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))).addGroup(backgroundPanelLayout.createSequentialGroup().addContainerGap().addComponent(LogoTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1165, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        backgroundPanelLayout.setVerticalGroup(
                backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 1029, Short.MAX_VALUE).addGroup(backgroundPanelLayout.createSequentialGroup().addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jPanel4, 0, 451, Short.MAX_VALUE).addComponent(jPanel3, 0, 451, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(LogoTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

//        scrollPane.setViewportView(backgroundPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, frameWidth, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, frameHeight, Short.MAX_VALUE));

//        pack();
        // newFrame = false;
    }// </editor-fold>                      

    private void RatButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = RatButton.isSelected();
        SumFreqButton.setEnabled(true);
        calculateFreq = false;
        if (isSelected) {
            BgFreqTF1.setEnabled(true);
            BgFreqTF2.setEnabled(true);
            BgFreqTF3.setEnabled(true);
            BgFreqTF4.setEnabled(true);
            BgFreqTF5.setEnabled(true);
            BgFreqTF6.setEnabled(true);
            BgFreqTF7.setEnabled(true);
            BgFreqTF8.setEnabled(true);
            BgFreqTF9.setEnabled(true);
            BgFreqTF10.setEnabled(true);
            BgFreqTF11.setEnabled(true);
            BgFreqTF12.setEnabled(true);
            BgFreqTF13.setEnabled(true);
            BgFreqTF14.setEnabled(true);
            BgFreqTF15.setEnabled(true);
            BgFreqTF16.setEnabled(true);
            BgFreqTF17.setEnabled(true);
            BgFreqTF18.setEnabled(true);
            BgFreqTF19.setEnabled(true);
            BgFreqTF20.setEnabled(true);
            BgFreqTF1.setText("6.91");
            BgFreqTF2.setText("2.30");
            BgFreqTF3.setText("4.72");
            BgFreqTF4.setText("7.00");
            BgFreqTF5.setText("3.68");
            BgFreqTF6.setText("6.45");
            BgFreqTF7.setText("2.61");
            BgFreqTF8.setText("4.34");
            BgFreqTF9.setText("5.68");
            BgFreqTF10.setText("10.00");
            BgFreqTF11.setText("2.22");
            BgFreqTF12.setText("3.56");
            BgFreqTF13.setText("6.23");
            BgFreqTF14.setText("4.74");
            BgFreqTF15.setText("5.72");
            BgFreqTF16.setText("8.48");
            BgFreqTF17.setText("5.44");
            BgFreqTF18.setText("6.09");
            BgFreqTF19.setText("1.19");
            BgFreqTF20.setText("2.63");
        }
        SumFreq();
    }

    private void EquiprobableButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = EquiprobableButton.isSelected();
        SumFreqButton.setEnabled(true);
        calculateFreq = false;
        if (isSelected) {
            BgFreqTF1.setEnabled(true);
            BgFreqTF2.setEnabled(true);
            BgFreqTF3.setEnabled(true);
            BgFreqTF4.setEnabled(true);
            BgFreqTF5.setEnabled(true);
            BgFreqTF6.setEnabled(true);
            BgFreqTF7.setEnabled(true);
            BgFreqTF8.setEnabled(true);
            BgFreqTF9.setEnabled(true);
            BgFreqTF10.setEnabled(true);
            BgFreqTF11.setEnabled(true);
            BgFreqTF12.setEnabled(true);
            BgFreqTF13.setEnabled(true);
            BgFreqTF14.setEnabled(true);
            BgFreqTF15.setEnabled(true);
            BgFreqTF16.setEnabled(true);
            BgFreqTF17.setEnabled(true);
            BgFreqTF18.setEnabled(true);
            BgFreqTF19.setEnabled(true);
            BgFreqTF20.setEnabled(true);
            BgFreqTF1.setText("5");
            BgFreqTF2.setText("5");
            BgFreqTF3.setText("5");
            BgFreqTF4.setText("5");
            BgFreqTF5.setText("5");
            BgFreqTF6.setText("5");
            BgFreqTF7.setText("5");
            BgFreqTF8.setText("5");
            BgFreqTF9.setText("5");
            BgFreqTF10.setText("5");
            BgFreqTF11.setText("5");
            BgFreqTF12.setText("5");
            BgFreqTF13.setText("5");
            BgFreqTF14.setText("5");
            BgFreqTF15.setText("5");
            BgFreqTF16.setText("5");
            BgFreqTF17.setText("5");
            BgFreqTF18.setText("5");
            BgFreqTF19.setText("5");
            BgFreqTF20.setText("5");
        }
        SumFreq();
    }

    private void HumanButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = HumanButton.isSelected();
        SumFreqButton.setEnabled(true);
        calculateFreq = false;
        if (isSelected) {
            BgFreqTF1.setEnabled(true);
            BgFreqTF2.setEnabled(true);
            BgFreqTF3.setEnabled(true);
            BgFreqTF4.setEnabled(true);
            BgFreqTF5.setEnabled(true);
            BgFreqTF6.setEnabled(true);
            BgFreqTF7.setEnabled(true);
            BgFreqTF8.setEnabled(true);
            BgFreqTF9.setEnabled(true);
            BgFreqTF10.setEnabled(true);
            BgFreqTF11.setEnabled(true);
            BgFreqTF12.setEnabled(true);
            BgFreqTF13.setEnabled(true);
            BgFreqTF14.setEnabled(true);
            BgFreqTF15.setEnabled(true);
            BgFreqTF16.setEnabled(true);
            BgFreqTF17.setEnabled(true);
            BgFreqTF18.setEnabled(true);
            BgFreqTF19.setEnabled(true);
            BgFreqTF20.setEnabled(true);
            BgFreqTF1.setText("7.17");
            BgFreqTF2.setText("2.29");
            BgFreqTF3.setText("4.66");
            BgFreqTF4.setText("7.01");
            BgFreqTF5.setText("3.54");
            BgFreqTF6.setText("6.79");
            BgFreqTF7.setText("2.65");
            BgFreqTF8.setText("4.23");
            BgFreqTF9.setText("5.62");
            BgFreqTF10.setText("9.84");
            BgFreqTF11.setText("2.12");
            BgFreqTF12.setText("3.50");
            BgFreqTF13.setText("6.50");
            BgFreqTF14.setText("4.76");
            BgFreqTF15.setText("5.86");
            BgFreqTF16.setText("8.34");
            BgFreqTF17.setText("5.34");
            BgFreqTF18.setText("5.96");
            BgFreqTF19.setText("1.25");
            BgFreqTF20.setText("2.56");
        }
        SumFreq();
    }

    private void CustomFreqButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = CustomFreqButton.isSelected();
        SumFreqButton.setEnabled(true);
        calculateFreq = false;
        if (isSelected) {
            BgFreqTF1.setEnabled(true);
            BgFreqTF2.setEnabled(true);
            BgFreqTF3.setEnabled(true);
            BgFreqTF4.setEnabled(true);
            BgFreqTF5.setEnabled(true);
            BgFreqTF6.setEnabled(true);
            BgFreqTF7.setEnabled(true);
            BgFreqTF8.setEnabled(true);
            BgFreqTF9.setEnabled(true);
            BgFreqTF10.setEnabled(true);
            BgFreqTF11.setEnabled(true);
            BgFreqTF12.setEnabled(true);
            BgFreqTF13.setEnabled(true);
            BgFreqTF14.setEnabled(true);
            BgFreqTF15.setEnabled(true);
            BgFreqTF16.setEnabled(true);
            BgFreqTF17.setEnabled(true);
            BgFreqTF18.setEnabled(true);
            BgFreqTF19.setEnabled(true);
            BgFreqTF20.setEnabled(true);
            BgFreqTF1.setText(" ");
            BgFreqTF2.setText(" ");
            BgFreqTF3.setText(" ");
            BgFreqTF4.setText(" ");
            BgFreqTF5.setText(" ");
            BgFreqTF6.setText(" ");
            BgFreqTF7.setText(" ");
            BgFreqTF8.setText(" ");
            BgFreqTF9.setText(" ");
            BgFreqTF10.setText(" ");
            BgFreqTF11.setText(" ");
            BgFreqTF12.setText(" ");
            BgFreqTF13.setText(" ");
            BgFreqTF14.setText(" ");
            BgFreqTF15.setText(" ");
            BgFreqTF16.setText(" ");
            BgFreqTF17.setText(" ");
            BgFreqTF18.setText(" ");
            BgFreqTF19.setText(" ");
            BgFreqTF20.setText(" ");
        }
        sumValueLabel.setText("0");
    }

    private void SumFreqButtonActionPerformed(java.awt.event.ActionEvent evt) {
        SumFreq();
    }

    private void NoneButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = NoneButton.isSelected();
        if (isSelected) {
            // jComboBox1.setSelectedItem("C");
            g1.setText("A");
            g2.setText("C");
            g3.setText("D");
            g4.setText("E");
            g5.setText("F");
            g6.setText("G");
            g7.setText("H");
            g8.setText("I");
            g9.setText("K");
            g10.setText("L");
            g11.setText("M");
            g12.setText("N");
            g13.setText("P");
            g14.setText("Q");
            g15.setText("R");
            g16.setText("S");
            g17.setText("T");
            g18.setText("V");
            g19.setText("W");
            g20.setText("Y");

            Tf1s.setSelectedItem("A");
            Tf2s.setSelectedItem("C");
            Tf3s.setSelectedItem("D");
            Tf4s.setSelectedItem("E");
            Tf5s.setSelectedItem("F");
            Tf6s.setSelectedItem("G");
            Tf7s.setSelectedItem("H");
            Tf8s.setSelectedItem("I");
            Tf9s.setSelectedItem("K");
            Tf10s.setSelectedItem("L");
            Tf11s.setSelectedItem("M");
            Tf12s.setSelectedItem("N");
            Tf13s.setSelectedItem("P");
            Tf14s.setSelectedItem("Q");
            Tf15s.setSelectedItem("R");
            Tf16s.setSelectedItem("S");
            Tf17s.setSelectedItem("T");
            Tf18s.setSelectedItem("V");
            Tf19s.setSelectedItem("W");
            Tf20s.setSelectedItem("Y");

            color1.setForeground(darkGreen);
            Tf1s.setForeground(darkGreen);
            colorHM.put(1, darkGreen);

            color2.setForeground(darkPink);
            Tf2s.setForeground(darkPink);
            colorHM.put(2, darkPink);

            color3.setForeground(Color.red);
            Tf3s.setForeground(Color.red);
            colorHM.put(3, Color.red);

            color4.setForeground(Color.red);
            Tf4s.setForeground(Color.red);
            colorHM.put(4, Color.red);

            color5.setForeground(Color.darkGray);
            Tf5s.setForeground(Color.darkGray);
            colorHM.put(5, Color.darkGray);

            color6.setForeground(darkOrange);
            Tf6s.setForeground(darkOrange);
            colorHM.put(6, darkOrange);

            color7.setForeground(Color.blue);
            Tf7s.setForeground(Color.blue);
            colorHM.put(7, Color.blue);

            color8.setForeground(darkGreen);
            Tf8s.setForeground(darkGreen);
            colorHM.put(8, darkGreen);

            color9.setForeground(Color.blue);
            Tf9s.setForeground(Color.blue);
            colorHM.put(9, Color.blue);

            color10.setForeground(darkGreen);
            Tf10s.setForeground(darkGreen);
            colorHM.put(10, darkGreen);

            color11.setForeground(darkGreen);
            Tf11s.setForeground(darkGreen);
            colorHM.put(11, darkGreen);

            color12.setForeground(purple);
            Tf12s.setForeground(purple);
            colorHM.put(12, purple);

            color13.setForeground(Color.darkGray);
            Tf13s.setForeground(Color.darkGray);
            colorHM.put(13, Color.darkGray);

            color14.setForeground(purple);
            Tf14s.setForeground(purple);
            colorHM.put(14, purple);

            color15.setForeground(Color.blue);
            Tf15s.setForeground(Color.blue);
            colorHM.put(15, Color.blue);

            color16.setForeground(Color.gray);
            Tf16s.setForeground(Color.gray);
            colorHM.put(16, Color.gray);

            color17.setForeground(Color.gray);
            Tf17s.setForeground(Color.gray);
            colorHM.put(17, Color.gray);

            color18.setForeground(darkGreen);
            Tf18s.setForeground(darkGreen);
            colorHM.put(18, darkGreen);

            color19.setForeground(Color.darkGray);
            Tf19s.setForeground(Color.darkGray);
            colorHM.put(19, Color.darkGray);

            color20.setForeground(Color.darkGray);
            Tf20s.setForeground(Color.darkGray);
            colorHM.put(20, Color.darkGray);

        }
    }

    private void ChargeButtonItemStateChanged(java.awt.event.ItemEvent evt) {
        //        boolean isSelected = ChargeButton.isSelected();
        //        if (isSelected) {
        //            Tf1.setText("D");
        //        }
    }

    private void ChargeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = ChargeButton.isSelected();
        if (isSelected) {
            g1.setText("AFILMPVW"); //nonpolar/hydrophobic
            g2.setText("CGNQSTY");   //polar/hydrophilic
            g3.setText("DE");   //acidic/negative
            g4.setText("HKR");   //basic/positive
            g5.setText("");
            g6.setText("");
            g7.setText("");
            g8.setText("");
            g9.setText("");
            g10.setText("");
            g11.setText("");
            g12.setText("");
            g13.setText("");
            g14.setText("");
            g15.setText("");
            g16.setText("");
            g17.setText("");
            g18.setText("");
            g19.setText("");
            g20.setText("");
            Tf1s.setSelectedItem("\u03a6");      //Phi - nonpolar
            Tf2s.setSelectedItem("\u0394");      //Delta - polar
            Tf3s.setSelectedItem("\u0398");     //Theta - acidic
            Tf4s.setSelectedItem("\u03a8");      //Psi  - basic
            Tf5s.setSelectedItem("-");
            Tf6s.setSelectedItem("-");
            Tf7s.setSelectedItem("-");
            Tf8s.setSelectedItem("-");
            Tf9s.setSelectedItem("-");
            Tf10s.setSelectedItem("-");
            Tf11s.setSelectedItem("-");
            Tf12s.setSelectedItem("-");
            Tf13s.setSelectedItem("-");
            Tf14s.setSelectedItem("-");
            Tf15s.setSelectedItem("-");
            Tf16s.setSelectedItem("-");
            Tf17s.setSelectedItem("-");
            Tf18s.setSelectedItem("-");
            Tf19s.setSelectedItem("-");
            Tf20s.setSelectedItem("-");


            color1.setForeground(darkGreen);
            Tf1s.setForeground(darkGreen);
            colorHM.put(1, darkGreen);

            color2.setForeground(darkOrange);
            Tf2s.setForeground(darkOrange);
            colorHM.put(2, darkOrange);

            color3.setForeground(Color.red);
            Tf3s.setForeground(Color.red);
            colorHM.put(3, Color.red);

            color4.setForeground(Color.blue);
            Tf4s.setForeground(Color.blue);
            colorHM.put(4, Color.blue);

            color5.setForeground(Color.black);
            Tf5s.setForeground(Color.black);
            colorHM.put(5, Color.black);

            color6.setForeground(Color.black);
            Tf6s.setForeground(Color.black);
            colorHM.put(6, Color.black);

            color7.setForeground(Color.black);
            Tf7s.setForeground(Color.black);
            colorHM.put(7, Color.black);

            color8.setForeground(Color.black);
            Tf8s.setForeground(Color.black);
            colorHM.put(8, Color.black);

            color9.setForeground(Color.black);
            Tf9s.setForeground(Color.black);
            colorHM.put(9, Color.black);

            color10.setForeground(Color.black);
            Tf10s.setForeground(Color.black);
            colorHM.put(10, Color.black);

            color11.setForeground(Color.black);
            Tf11s.setForeground(Color.black);
            colorHM.put(11, Color.black);

            color12.setForeground(Color.black);
            Tf12s.setForeground(Color.black);
            colorHM.put(12, Color.black);

            color13.setForeground(Color.black);
            Tf13s.setForeground(Color.black);
            colorHM.put(13, Color.black);

            color14.setForeground(Color.black);
            Tf14s.setForeground(Color.black);
            colorHM.put(14, Color.black);

            color15.setForeground(Color.black);
            Tf15s.setForeground(Color.black);
            colorHM.put(15, Color.black);

            color16.setForeground(Color.black);
            Tf16s.setForeground(Color.black);
            colorHM.put(16, Color.black);

            color17.setForeground(Color.black);
            Tf17s.setForeground(Color.black);
            colorHM.put(17, Color.black);

            color18.setForeground(Color.black);
            Tf18s.setForeground(Color.black);
            colorHM.put(18, Color.black);

            color19.setForeground(Color.black);
            Tf19s.setForeground(Color.black);
            colorHM.put(19, Color.black);

            color20.setForeground(Color.black);
            Tf20s.setForeground(Color.black);
            colorHM.put(20, Color.black);

        }
    }

    private void CustomGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = CustomGroupButton.isSelected();
        if (isSelected) {
            g1.setText("");
            g2.setText("");
            g3.setText("");
            g4.setText("");
            g5.setText("");
            g6.setText("");
            g7.setText("");
            g8.setText("");
            g9.setText("");
            g10.setText("");
            g11.setText("");
            g12.setText("");
            g13.setText("");
            g14.setText("");
            g15.setText("");
            g16.setText("");
            g17.setText("");
            g18.setText("");
            g19.setText("");
            g20.setText("");
            Tf1s.setSelectedItem("-");
            Tf2s.setSelectedItem("-");
            Tf3s.setSelectedItem("-");
            Tf4s.setSelectedItem("-");
            Tf5s.setSelectedItem("-");
            Tf6s.setSelectedItem("-");
            Tf7s.setSelectedItem("-");
            Tf8s.setSelectedItem("-");
            Tf9s.setSelectedItem("-");
            Tf10s.setSelectedItem("-");
            Tf11s.setSelectedItem("-");
            Tf12s.setSelectedItem("-");
            Tf13s.setSelectedItem("-");
            Tf14s.setSelectedItem("-");
            Tf15s.setSelectedItem("-");
            Tf16s.setSelectedItem("-");
            Tf17s.setSelectedItem("-");
            Tf18s.setSelectedItem("-");
            Tf19s.setSelectedItem("-");
            Tf20s.setSelectedItem("-");

            color1.setForeground(Color.black);
            Tf1s.setForeground(Color.black);
            colorHM.put(1, Color.black);

            color2.setForeground(Color.black);
            Tf2s.setForeground(Color.black);
            colorHM.put(2, Color.black);

            color3.setForeground(Color.black);
            Tf3s.setForeground(Color.black);
            colorHM.put(3, Color.black);

            color4.setForeground(Color.black);
            Tf4s.setForeground(Color.black);
            colorHM.put(4, Color.black);

            color5.setForeground(Color.black);
            Tf5s.setForeground(Color.black);
            colorHM.put(5, Color.black);

            color6.setForeground(Color.black);
            Tf6s.setForeground(Color.black);
            colorHM.put(6, Color.black);

            color7.setForeground(Color.black);
            Tf7s.setForeground(Color.black);
            colorHM.put(7, Color.black);

            color8.setForeground(Color.black);
            Tf8s.setForeground(Color.black);
            colorHM.put(8, Color.black);

            color9.setForeground(Color.black);
            Tf9s.setForeground(Color.black);
            colorHM.put(9, Color.black);

            color10.setForeground(Color.black);
            Tf10s.setForeground(Color.black);
            colorHM.put(10, Color.black);

            color11.setForeground(Color.black);
            Tf11s.setForeground(Color.black);
            colorHM.put(11, Color.black);

            color12.setForeground(Color.black);
            Tf12s.setForeground(Color.black);
            colorHM.put(12, Color.black);

            color13.setForeground(Color.black);
            Tf13s.setForeground(Color.black);
            colorHM.put(13, Color.black);

            color14.setForeground(Color.black);
            Tf14s.setForeground(Color.black);
            colorHM.put(14, Color.black);

            color15.setForeground(Color.black);
            Tf15s.setForeground(Color.black);
            colorHM.put(15, Color.black);

            color16.setForeground(Color.black);
            Tf16s.setForeground(Color.black);
            colorHM.put(16, Color.black);

            color17.setForeground(Color.black);
            Tf17s.setForeground(Color.black);
            colorHM.put(17, Color.black);

            color18.setForeground(Color.black);
            Tf18s.setForeground(Color.black);
            colorHM.put(18, Color.black);

            color19.setForeground(Color.black);
            Tf19s.setForeground(Color.black);
            colorHM.put(19, Color.black);

            color20.setForeground(Color.black);
            Tf20s.setForeground(Color.black);
            colorHM.put(20, Color.black);

        }
    }

    private void color1ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color1.setForeground(c);
        Tf1s.setForeground(c);
        colorHM.put(1, c);
//        LogoOutput2.repaint();
//        FreqOutput2.repaint();
//        PvalueOutput2.repaint();
//        validate();
//        repaint();

    }

    private void color2ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color2.setForeground(c);
        Tf2s.setForeground(c);
        colorHM.put(2, c);
    }

    private void color3ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color3.setForeground(c);
        Tf3s.setForeground(c);
        colorHM.put(3, c);
    }

    private void color4ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color4.setForeground(c);
        Tf4s.setForeground(c);
        colorHM.put(4, c);
    }

    private void color5ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color5.setForeground(c);
        Tf5s.setForeground(c);
        colorHM.put(5, c);
    }

    private void color6ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color6.setForeground(c);
        Tf6s.setForeground(c);
        colorHM.put(6, c);
    }

    private void color7ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color7.setForeground(c);
        Tf7s.setForeground(c);
        colorHM.put(7, c);
    }

    private void color8ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color8.setForeground(c);
        Tf8s.setForeground(c);
        colorHM.put(8, c);
    }

    private void color9ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color9.setForeground(c);
        Tf9s.setForeground(c);
        colorHM.put(9, c);
    }

    private void color10ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color10.setForeground(c);
        Tf10s.setForeground(c);
        colorHM.put(10, c);
    }

    private void color11ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color11.setForeground(c);
        Tf11s.setForeground(c);
        colorHM.put(11, c);
    }

    private void color12ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color12.setForeground(c);
        Tf12s.setForeground(c);
        colorHM.put(12, c);
    }

    private void color13ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color13.setForeground(c);
        Tf13s.setForeground(c);
        colorHM.put(13, c);
    }

    private void color14ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color14.setForeground(c);
        Tf14s.setForeground(c);
        colorHM.put(14, c);
    }

    private void color15ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color15.setForeground(c);
        Tf15s.setForeground(c);
        colorHM.put(15, c);
    }

    private void color16ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color16.setForeground(c);
        Tf16s.setForeground(c);
        colorHM.put(16, c);
    }

    private void color17ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color17.setForeground(c);
        Tf17s.setForeground(c);
        colorHM.put(17, c);
    }

    private void color18ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color18.setForeground(c);
        Tf18s.setForeground(c);
        colorHM.put(18, c);
    }

    private void color19ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color19.setForeground(c);
        Tf19s.setForeground(c);
        colorHM.put(19, c);
    }

    private void color20ActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        color20.setForeground(c);
        Tf20s.setForeground(c);
        colorHM.put(20, c);
    }

    private void ReplaceSizeButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = ReplaceSizeButton.isSelected();
        if (isSelected) {
            g1.setText("FHRWY");
            g2.setText("EKMQ");
            g3.setText("CDILNPSTV");
            g4.setText("AG");
            g5.setText("");
            g6.setText("");
            g7.setText("");
            g8.setText("");
            g9.setText("");
            g10.setText("");
            g11.setText("");
            g12.setText("");
            g13.setText("");
            g14.setText("");
            g15.setText("");
            g16.setText("");
            g17.setText("");
            g18.setText("");
            g19.setText("");
            g20.setText("");
            Tf1s.setSelectedItem("4");
            Tf2s.setSelectedItem("3");
            Tf3s.setSelectedItem("2");
            Tf4s.setSelectedItem("1");
            Tf5s.setSelectedItem("-");
            Tf6s.setSelectedItem("-");
            Tf7s.setSelectedItem("-");
            Tf8s.setSelectedItem("-");
            Tf9s.setSelectedItem("-");
            Tf10s.setSelectedItem("-");
            Tf11s.setSelectedItem("-");
            Tf12s.setSelectedItem("-");
            Tf13s.setSelectedItem("-");
            Tf14s.setSelectedItem("-");
            Tf15s.setSelectedItem("-");
            Tf16s.setSelectedItem("-");
            Tf17s.setSelectedItem("-");
            Tf18s.setSelectedItem("-");
            Tf19s.setSelectedItem("-");
            Tf20s.setSelectedItem("-");

            color1.setForeground(Color.red);
            Tf1s.setForeground(Color.red);
            colorHM.put(1, Color.red);

            color2.setForeground(darkOrange);
            Tf2s.setForeground(darkOrange);
            colorHM.put(2, darkOrange);

            color3.setForeground(darkGreen);
            Tf3s.setForeground(darkGreen);
            colorHM.put(3, darkGreen);

            color4.setForeground(Color.blue);
            Tf4s.setForeground(Color.blue);
            colorHM.put(4, Color.blue);

            color5.setForeground(Color.black);
            Tf5s.setForeground(Color.black);
            colorHM.put(5, Color.black);

            color6.setForeground(Color.black);
            Tf6s.setForeground(Color.black);
            colorHM.put(6, Color.black);

            color7.setForeground(Color.black);
            Tf7s.setForeground(Color.black);
            colorHM.put(7, Color.black);

            color8.setForeground(Color.black);
            Tf8s.setForeground(Color.black);
            colorHM.put(8, Color.black);

            color9.setForeground(Color.black);
            Tf9s.setForeground(Color.black);
            colorHM.put(9, Color.black);

            color10.setForeground(Color.black);
            Tf10s.setForeground(Color.black);
            colorHM.put(10, Color.black);

            color11.setForeground(Color.black);
            Tf11s.setForeground(Color.black);
            colorHM.put(11, Color.black);

            color12.setForeground(Color.black);
            Tf12s.setForeground(Color.black);
            colorHM.put(12, Color.black);

            color13.setForeground(Color.black);
            Tf13s.setForeground(Color.black);
            colorHM.put(13, Color.black);

            color14.setForeground(Color.black);
            Tf14s.setForeground(Color.black);
            colorHM.put(14, Color.black);

            color15.setForeground(Color.black);
            Tf15s.setForeground(Color.black);
            colorHM.put(15, Color.black);

            color16.setForeground(Color.black);
            Tf16s.setForeground(Color.black);
            colorHM.put(16, Color.black);

            color17.setForeground(Color.black);
            Tf17s.setForeground(Color.black);
            colorHM.put(17, Color.black);

            color18.setForeground(Color.black);
            Tf18s.setForeground(Color.black);
            colorHM.put(18, Color.black);

            color19.setForeground(Color.black);
            Tf19s.setForeground(Color.black);
            colorHM.put(19, Color.black);

            color20.setForeground(Color.black);
            Tf20s.setForeground(Color.black);
            colorHM.put(20, Color.black);

        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        SequenceInput.setText("");
    }

    private void ScalingOffActionPerformed(java.awt.event.ActionEvent evt) {
        modifiedScalingType = 0;
    }

    private void ScalingOnActionPerformed(java.awt.event.ActionEvent evt) {
        modifiedScalingType = 1;
    }

    private void CreateLogoActionPerformed(java.awt.event.ActionEvent evt) {

        System.out.println("IC values for each position:");
        frameWidth = getWidth();
        frameHeight = getHeight();

        //Input Sequences
        String peptides = SequenceInput.getText().toUpperCase().replaceAll("[\\W&&[^\\s]]", "");
        String[] splitPeptides = peptides.split("\\s+");
        int numSeq = splitPeptides.length;
        lengthSeq = splitPeptides[0].length();

        boolean differentLength = false;
        for (int i = 0; i < numSeq; i++) {
            if (splitPeptides[i].length() != lengthSeq) {
                differentLength = true;
                break;
            }
        }

        //stop analysis if peptides are not the same length
        if (differentLength) {
            final JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Error: Peptides must all be the same length.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {
            char[][] seqAlign = new char[numSeq][lengthSeq];
            for (int i = 0; i < numSeq; i++) {
                for (int j = 0; j < lengthSeq; j++) {
                    seqAlign[i][j] = splitPeptides[i].charAt(j);
                }
            }
            SequenceInput.removeAll();
            CreateLogo.removeAll();

            //Check that all frequences were inputted:
            boolean incorrectFreq = false;

            try {
                Double testDouble = Double.parseDouble(BgFreqTF1.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF2.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF3.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF4.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF5.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF6.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF7.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF8.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF9.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF10.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF11.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF12.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF13.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF14.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF15.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF16.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF17.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF18.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF19.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }
            try {
                Double testDouble = Double.parseDouble(BgFreqTF20.getText());
            } catch (NumberFormatException nfe) {
                incorrectFreq = true;
            }



            //Frequency calculation/input
            double[] aaBgFreq = new double[20];
            if (incorrectFreq && !calculateFreq) {
                final JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Error: Input frequency values for all amino acids.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } else if (calculateFreq) {
                aaBgFreq = null;
            } else {
                //Input AA fequencies
                aaBgFreq[0] = Double.parseDouble(BgFreqTF1.getText());
                aaBgFreq[1] = Double.parseDouble(BgFreqTF2.getText());
                aaBgFreq[2] = Double.parseDouble(BgFreqTF3.getText());
                aaBgFreq[3] = Double.parseDouble(BgFreqTF4.getText());
                aaBgFreq[4] = Double.parseDouble(BgFreqTF5.getText());
                aaBgFreq[5] = Double.parseDouble(BgFreqTF6.getText());
                aaBgFreq[6] = Double.parseDouble(BgFreqTF7.getText());
                aaBgFreq[7] = Double.parseDouble(BgFreqTF8.getText());
                aaBgFreq[8] = Double.parseDouble(BgFreqTF9.getText());
                aaBgFreq[9] = Double.parseDouble(BgFreqTF10.getText());
                aaBgFreq[10] = Double.parseDouble(BgFreqTF11.getText());
                aaBgFreq[11] = Double.parseDouble(BgFreqTF12.getText());
                aaBgFreq[12] = Double.parseDouble(BgFreqTF13.getText());
                aaBgFreq[13] = Double.parseDouble(BgFreqTF14.getText());
                aaBgFreq[14] = Double.parseDouble(BgFreqTF15.getText());
                aaBgFreq[15] = Double.parseDouble(BgFreqTF16.getText());
                aaBgFreq[16] = Double.parseDouble(BgFreqTF17.getText());
                aaBgFreq[17] = Double.parseDouble(BgFreqTF18.getText());
                aaBgFreq[18] = Double.parseDouble(BgFreqTF19.getText());
                aaBgFreq[19] = Double.parseDouble(BgFreqTF20.getText());
            }

            //Input Groups
            groupings = new ArrayList<String>();                                         //= new ArrayList(Arrays.asList("A","C","D","E","F","G","H","I","K","L","M","N","P","Q","R","S","T","V","W","Y"));							//string of AAs
            ArrayList<Character> groupingsLabel = new ArrayList<Character>();                          // = new ArrayList(Arrays.asList('A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y'));					//label
            ArrayList<Color> colors = new ArrayList<Color>();


            //Check to see if symbols repeat
            Character[] symbolArray = new Character[20];
            symbolArray[0] = (Tf1s.getSelectedIndex() == 0) ? '-' : ((String) Tf1s.getSelectedItem()).charAt(0);    //((String) Tf1s.getSelectedItem()).charAt(0);
            symbolArray[1] = (Tf2s.getSelectedIndex() == 0) ? '-' : ((String) Tf2s.getSelectedItem()).charAt(0);
            symbolArray[2] = (Tf3s.getSelectedIndex() == 0) ? '-' : ((String) Tf3s.getSelectedItem()).charAt(0);
            symbolArray[3] = (Tf4s.getSelectedIndex() == 0) ? '-' : ((String) Tf4s.getSelectedItem()).charAt(0);
            symbolArray[4] = (Tf5s.getSelectedIndex() == 0) ? '-' : ((String) Tf5s.getSelectedItem()).charAt(0);
            symbolArray[5] = (Tf6s.getSelectedIndex() == 0) ? '-' : ((String) Tf6s.getSelectedItem()).charAt(0);
            symbolArray[6] = (Tf7s.getSelectedIndex() == 0) ? '-' : ((String) Tf7s.getSelectedItem()).charAt(0);
            symbolArray[7] = (Tf8s.getSelectedIndex() == 0) ? '-' : ((String) Tf8s.getSelectedItem()).charAt(0);
            symbolArray[8] = (Tf9s.getSelectedIndex() == 0) ? '-' : ((String) Tf9s.getSelectedItem()).charAt(0);
            symbolArray[9] = (Tf10s.getSelectedIndex() == 0) ? '-' : ((String) Tf10s.getSelectedItem()).charAt(0);
            symbolArray[10] = (Tf11s.getSelectedIndex() == 0) ? '-' : ((String) Tf11s.getSelectedItem()).charAt(0);
            symbolArray[11] = (Tf12s.getSelectedIndex() == 0) ? '-' : ((String) Tf12s.getSelectedItem()).charAt(0);
            symbolArray[12] = (Tf13s.getSelectedIndex() == 0) ? '-' : ((String) Tf13s.getSelectedItem()).charAt(0);
            symbolArray[13] = (Tf14s.getSelectedIndex() == 0) ? '-' : ((String) Tf14s.getSelectedItem()).charAt(0);
            symbolArray[14] = (Tf15s.getSelectedIndex() == 0) ? '-' : ((String) Tf15s.getSelectedItem()).charAt(0);
            symbolArray[15] = (Tf16s.getSelectedIndex() == 0) ? '-' : ((String) Tf16s.getSelectedItem()).charAt(0);
            symbolArray[16] = (Tf17s.getSelectedIndex() == 0) ? '-' : ((String) Tf17s.getSelectedItem()).charAt(0);
            symbolArray[17] = (Tf18s.getSelectedIndex() == 0) ? '-' : ((String) Tf18s.getSelectedItem()).charAt(0);
            symbolArray[18] = (Tf19s.getSelectedIndex() == 0) ? '-' : ((String) Tf19s.getSelectedItem()).charAt(0);
            symbolArray[19] = (Tf20s.getSelectedIndex() == 0) ? '-' : ((String) Tf20s.getSelectedItem()).charAt(0);

            TreeSet<String> symbolTree = new TreeSet<String>();
            int count = 0;
            boolean incorrectSymbol = false;
            for (int i = 0; i < 20; i++) {
                if (symbolArray[i] == '-') {
                    // symbolTree.add(Integer.toString(count));
                    count++;
                } else {
                    symbolTree.add(Character.toString(symbolArray[i]));
                }
            }
            if (symbolTree.size() != (20 - count)) {
                incorrectSymbol = true;
            }

            //Convert group textfield inputs into uppercase strings
            String AAgroup1 = g1.getText().toUpperCase();
            String AAgroup2 = g2.getText().toUpperCase();
            String AAgroup3 = g3.getText().toUpperCase();
            String AAgroup4 = g4.getText().toUpperCase();
            String AAgroup5 = g5.getText().toUpperCase();
            String AAgroup6 = g6.getText().toUpperCase();
            String AAgroup7 = g7.getText().toUpperCase();
            String AAgroup8 = g8.getText().toUpperCase();
            String AAgroup9 = g9.getText().toUpperCase();
            String AAgroup10 = g10.getText().toUpperCase();
            String AAgroup11 = g11.getText().toUpperCase();
            String AAgroup12 = g12.getText().toUpperCase();
            String AAgroup13 = g13.getText().toUpperCase();
            String AAgroup14 = g14.getText().toUpperCase();
            String AAgroup15 = g15.getText().toUpperCase();
            String AAgroup16 = g16.getText().toUpperCase();
            String AAgroup17 = g17.getText().toUpperCase();
            String AAgroup18 = g18.getText().toUpperCase();
            String AAgroup19 = g19.getText().toUpperCase();
            String AAgroup20 = g20.getText().toUpperCase();

            //make sure a ' ' is not used as a group symbol
            //first count number of groups
            int countGroups = 0;
            if (AAgroup1.length() != 0) {
                countGroups++;
            }
            if (AAgroup2.length() != 0) {
                countGroups++;
            }
            if (AAgroup3.length() != 0) {
                countGroups++;
            }
            if (AAgroup4.length() != 0) {
                countGroups++;
            }
            if (AAgroup5.length() != 0) {
                countGroups++;
            }
            if (AAgroup6.length() != 0) {
                countGroups++;
            }
            if (AAgroup7.length() != 0) {
                countGroups++;
            }
            if (AAgroup8.length() != 0) {
                countGroups++;
            }
            if (AAgroup9.length() != 0) {
                countGroups++;
            }
            if (AAgroup10.length() != 0) {
                countGroups++;
            }
            if (AAgroup11.length() != 0) {
                countGroups++;
            }
            if (AAgroup12.length() != 0) {
                countGroups++;
            }
            if (AAgroup13.length() != 0) {
                countGroups++;
            }
            if (AAgroup14.length() != 0) {
                countGroups++;
            }
            if (AAgroup15.length() != 0) {
                countGroups++;
            }
            if (AAgroup16.length() != 0) {
                countGroups++;
            }
            if (AAgroup17.length() != 0) {
                countGroups++;
            }
            if (AAgroup18.length() != 0) {
                countGroups++;
            }
            if (AAgroup19.length() != 0) {
                countGroups++;
            }
            if (AAgroup20.length() != 0) {
                countGroups++;
            }

            //check that number of groups = number of valid (non-space) symbols
            if (countGroups != 20 - count) {
                incorrectSymbol = true;
            }


            //Create a single large array of the group strings
            String[] sepAAgroup = new String[AAgroup1.length() + AAgroup2.length() + AAgroup3.length() + AAgroup4.length() + AAgroup5.length() + AAgroup6.length() + AAgroup7.length() + AAgroup8.length() + AAgroup9.length() + AAgroup10.length() + AAgroup11.length() + AAgroup12.length() + AAgroup13.length() + AAgroup14.length() + AAgroup15.length() + AAgroup16.length() + AAgroup17.length() + AAgroup18.length() + AAgroup19.length() + AAgroup20.length()];
            int next = 0;
            for (int i = next; i < next + AAgroup1.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup1.charAt(i));
            }
            next = next + AAgroup1.length();
            for (int i = next; i < next + AAgroup2.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup2.charAt(i - next));
            }
            next = next + AAgroup2.length();
            for (int i = next; i < next + AAgroup3.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup3.charAt(i - next));
            }
            next = next + AAgroup3.length();
            for (int i = next; i < next + AAgroup4.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup4.charAt(i - next));
            }
            next = next + AAgroup4.length();
            for (int i = next; i < next + AAgroup5.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup5.charAt(i - next));
            }
            next = next + AAgroup5.length();
            for (int i = next; i < next + AAgroup6.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup6.charAt(i - next));
            }
            next = next + AAgroup6.length();
            for (int i = next; i < next + AAgroup7.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup7.charAt(i - next));
            }
            next = next + AAgroup7.length();
            for (int i = next; i < next + AAgroup8.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup8.charAt(i - next));
            }
            next = next + AAgroup8.length();
            for (int i = next; i < next + AAgroup9.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup9.charAt(i - next));
            }
            next = next + AAgroup9.length();
            for (int i = next; i < next + AAgroup10.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup10.charAt(i - next));
            }
            next = next + AAgroup10.length();

            for (int i = next; i < next + AAgroup11.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup11.charAt(i - next));
            }
            next = next + AAgroup11.length();

            for (int i = next; i < next + AAgroup12.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup12.charAt(i - next));
            }
            next = next + AAgroup12.length();

            for (int i = next; i < next + AAgroup13.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup13.charAt(i - next));
            }
            next = next + AAgroup13.length();

            for (int i = next; i < next + AAgroup14.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup14.charAt(i - next));
            }
            next = next + AAgroup14.length();

            for (int i = next; i < next + AAgroup15.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup15.charAt(i - next));
            }
            next = next + AAgroup15.length();

            for (int i = next; i < next + AAgroup16.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup16.charAt(i - next));
            }
            next = next + AAgroup16.length();

            for (int i = next; i < next + AAgroup17.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup17.charAt(i - next));
            }
            next = next + AAgroup17.length();

            for (int i = next; i < next + AAgroup18.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup18.charAt(i - next));
            }
            next = next + AAgroup18.length();

            for (int i = next; i < next + AAgroup19.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup19.charAt(i - next));
            }
            next = next + AAgroup19.length();

            for (int i = next; i < next + AAgroup20.length(); i++) {
                sepAAgroup[i] = Character.toString(AAgroup20.charAt(i - next));
            }
            next = next + AAgroup20.length();





            //INPUT VALIDATION/////////////////////////////////////////////////////////INPUT VALIDATION///////////////////////////////////////////////////////
            //check that group array lists match AA letter pattern
            boolean incorrectChar = false;
            String regex = "[ACDEFGHIKLMNPQRSTVWY]";
            TreeSet<Character> charTree = new TreeSet<Character>();
            for (int i = 0; i < sepAAgroup.length; i++) {
                Pattern p = Pattern.compile(regex);
                String stringToMatch = sepAAgroup[i];
                Matcher m = p.matcher(stringToMatch);

                //Check to see if all character inputs are valid AAs
                if (!m.find()) {
                    incorrectChar = true;
                } else {
                    charTree.add(sepAAgroup[i].charAt(0));
                }
            }

            //check that input sequences match AA letter pattern
            boolean incorrectSeq = false;
            for (int i = 0; i < numSeq; i++) {
                for (int j = 0; j < lengthSeq; j++) {
                    Pattern p = Pattern.compile(regex);
                    String stringToMatch = Character.toString(seqAlign[i][j]);
                    Matcher m = p.matcher(stringToMatch);
                    if (!m.find()) {
                        incorrectSeq = true;
                    }
                }
            }



            ////////////////ERROR MESSAGES////////////////////////////////////////////////////////////ERROR MESSAGES//////////////////////////////////////////////
            //Error if frequences do not add to 100
            if (!calculateFreq) {
                SumFreq();
            }
            if (!calculateFreq && Integer.parseInt(sumValueLabel.getText()) != 100) {
                final JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Error: Amino Acid frequences do not sum to 100.  Frequency sum should round to 100.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } //incorrect character used in groupings
            else if (incorrectChar) {
                final JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Error: An invalid character was used in groupings.  Only input characters for the 20 Amino Acids.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } //Error if AAs are repeated in groupings
            else if (sepAAgroup.length > 20) {
                final JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Error: At least one Amino Acid was entered multiple times.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } //Error if not all 20 AAs are used in groupings
            else if (charTree.size() < 20) {
                final JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Error: Not all 20 Amino Acids were used.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } //Error if symbols are repeated or blank spaces
            else if (incorrectSymbol) {
                final JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Error: Do not repeat Amino Acid group symbols or use blank spaces.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } //Error if <2 peptide sequences are submitted
            else if (numSeq < 2) {
                final JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Error: Must input at least two peptide sequences.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } //Error if input sequences contain a non-AA character
            else if (incorrectSeq) {
                final JFrame frame = new JFrame();
                JOptionPane.showMessageDialog(frame, "Error: An invalid character was used in input sequences.  Only input characters for the 20 Amino Acids.", "ERROR", JOptionPane.WARNING_MESSAGE);
            } //Proceed with logo generation
            else {




                ////////////////Colors///////////////////////////////////////////////////////////////////Colors///////////////////////////////////////////////////

                for (int i = 0; i < 20; i++) {
                    if (!colorHM.containsKey(i + 1)) {                  //check if group color is already assigned
                        colorHM.put(i + 1, Color.black);  //set default color of each unassigned group to BLACK
                    }
                }


                groupings.add(g1.getText());
                groupingsLabel.add(symbolArray[0]);  //getText().charAt(0));
                colors.add(colorHM.get(1));

                groupings.add(g2.getText());
                groupingsLabel.add(symbolArray[1]);
                colors.add(colorHM.get(2));

                groupings.add(g3.getText());
                groupingsLabel.add(symbolArray[2]);
                colors.add(colorHM.get(3));

                groupings.add(g4.getText());
                groupingsLabel.add(symbolArray[3]);
                colors.add(colorHM.get(4));

                groupings.add(g5.getText());
                groupingsLabel.add(symbolArray[4]);
                colors.add(colorHM.get(5));

                groupings.add(g6.getText());
                groupingsLabel.add(symbolArray[5]);
                colors.add(colorHM.get(6));

                groupings.add(g7.getText());
                groupingsLabel.add(symbolArray[6]);
                colors.add(colorHM.get(7));

                groupings.add(g8.getText());
                groupingsLabel.add(symbolArray[7]);
                colors.add(colorHM.get(8));

                groupings.add(g9.getText());
                groupingsLabel.add(symbolArray[8]);
                colors.add(colorHM.get(9));

                groupings.add(g10.getText());
                groupingsLabel.add(symbolArray[9]);
                colors.add(colorHM.get(10));

                groupings.add(g11.getText());
                groupingsLabel.add(symbolArray[10]);
                colors.add(colorHM.get(11));

                groupings.add(g12.getText());
                groupingsLabel.add(symbolArray[11]);
                colors.add(colorHM.get(12));

                groupings.add(g13.getText());
                groupingsLabel.add(symbolArray[12]);
                colors.add(colorHM.get(13));

                groupings.add(g14.getText());
                groupingsLabel.add(symbolArray[13]);
                colors.add(colorHM.get(14));

                groupings.add(g15.getText());
                groupingsLabel.add(symbolArray[14]);
                colors.add(colorHM.get(15));

                groupings.add(g16.getText());
                groupingsLabel.add(symbolArray[15]);
                colors.add(colorHM.get(16));

                groupings.add(g17.getText());
                groupingsLabel.add(symbolArray[16]);
                colors.add(colorHM.get(17));

                groupings.add(g18.getText());
                groupingsLabel.add(symbolArray[17]);
                colors.add(colorHM.get(18));

                groupings.add(g19.getText());
                groupingsLabel.add(symbolArray[18]);
                colors.add(colorHM.get(19));

                groupings.add(g20.getText());
                groupingsLabel.add(symbolArray[19]);
                colors.add(colorHM.get(20));

                //change background color for disfavored logo only if user hasn't already changed the color
                if (colorBackgroundChanged) {
                } else if (showFavored) {
                    colorOfBackground = Color.white;
                } else {
                    colorOfBackground = Color.lightGray;
                }
                ////////////////Colors///////////////////////////////////////////////////////////////////Colors///////////////////////////////////////////////////




                ////////////////Modified Position//////////////////////////////////////////////////Modified Position////////////////////////////////////////////////
                int modifiedPos = 0;
                Pattern integerPattern = Pattern.compile("[0-9]+");
                Matcher matchesInteger = integerPattern.matcher(CustomModifiedTF.getText());
                boolean isInteger = matchesInteger.matches();
                if (includeModifiedPosition && modifiedPositionCenter) {
                    modifiedPos = (lengthSeq + 1) / 2;          //Center Position
                } else if (includeModifiedPosition && isInteger && Integer.parseInt(CustomModifiedTF.getText()) > 0 && Integer.parseInt(CustomModifiedTF.getText()) < lengthSeq + 1) {             //custom input modified position must be valid position
                    modifiedPos = Integer.parseInt(CustomModifiedTF.getText());
                } else {
                    modifiedPos = 0;          // default (no special modified position treatment)
                }


                ////////////////X^2 alpha significance levels //////////////////////////////////////////////////X^2 alpha significance levels////////////////////////////////////////////////
                double posAlpha = 1; //Double.valueOf(positionAlphaTF.getText().trim()).doubleValue();
                double AAAlpha = Double.valueOf(AAAlphaTF.getText().trim()).doubleValue();


                ////////////////Create Logos //////////////////////////////////////////////////Create Logos////////////////////////////////////////////////


                MakeLogo logo = new MakeLogo(seqAlign, numSeq, lengthSeq, groupings, groupingsLabel, colors, modifiedScalingType, aaBgFreq, modifiedPos, colorOfBackground, colorOfAxes, colorOfModified, charactersOn, posAlpha, AAAlpha, showFavored);
                LogoOutput2.removeAll();
                FreqOutput2.removeAll();
                PvalueOutput2.removeAll();

                myPanel = logo.mainPanel;
                //myPanel.setPreferredSize(new Dimension(450,250));
                LogoOutput2.add(myPanel);

                pvPanel = logo.pvaluePanel;
                pvPanel.setSize(new Dimension(1115, 435));

                probPanel = logo.probabilityPanel;
                //probPanel.setPreferredSize(new Dimension(1200,190));

                FreqOutput2.add(probPanel);
                PvalueOutput2.add(pvPanel);

                LogoOutput2.revalidate();
                FreqOutput2.revalidate();
                PvalueOutput2.revalidate();
                LogoOutput2.repaint();
                FreqOutput2.repaint();
                PvalueOutput2.repaint();
                setSize(new Dimension(frameWidth, frameHeight));
                //validate();
                //repaint();

                //Add double values to arrays for output
                groupBgFreq = logo.groupBgFreq;
                probMatrix = logo.probMatrix;
                Pvalues = logo.Pvalues;

                //Change tab to IC Logo tab
                LogoTabPane.setSelectedIndex(0);
//                pack();

                peptideLengthLabel.setText(Integer.toString(lengthSeq));
                numPeptideLabel.setText(Integer.toString(numSeq));
            }
        }



    }

    private void ExportICLogoActionPerformed(java.awt.event.ActionEvent evt) {

        //From ABDesigner HeatMap
        JFileChooser chooser = new JFileChooser();
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter bmpFilter = new FileNameExtensionFilter("Bitmap Image (.bmp)", "bmp");
        FileNameExtensionFilter pngFilter = new FileNameExtensionFilter("PNG File (.png)", "png");
        chooser.addChoosableFileFilter(bmpFilter);
        chooser.addChoosableFileFilter(pngFilter);
        int returnVal = chooser.showDialog(null, "Export Image"); //HeatMap.this, "Export Image");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Paint labels
            BufferedImage myPanelBI = (BufferedImage) myPanel.createImage(myPanel.getWidth(), myPanel.getHeight());

            Graphics myPanelGraphics = myPanelBI.getGraphics();
            myPanel.paint(myPanelGraphics);
            myPanelGraphics.dispose();

            //Draw final image
            //BufferedImage bufferedImage = new BufferedImage(labels.getWidth() + heatMap.getWidth(), heatMap.getHeight(), BufferedImage.TYPE_INT_RGB);
            Graphics g = myPanelBI.getGraphics();
            // g.drawImage(myPanelBI, 0, 0, null);
            g.drawImage(myPanelBI, myPanel.getWidth(), myPanel.getHeight(), null);
            g.dispose();
            //Write image to file
            String extension = ((FileNameExtensionFilter) chooser.getFileFilter()).getExtensions()[0];
            File file = new File(chooser.getSelectedFile().getPath() + "." + extension);
            try {
                ImageIO.write(myPanelBI, extension, file);
            } catch (IOException e) {
            }

        }
    }

    private void YesModifiedButtonActionPerformed(java.awt.event.ActionEvent evt) {
        CenterModifiedButton.setEnabled(true);
        CustomModifiedButton.setEnabled(true);
        //   CustomModifiedTF.setEditable(true);
        CustomModifiedTF.setEnabled(true);
        CenterModifiedButton.setSelected(true);
        ScalingOn.setEnabled(true);
        ScalingOff.setEnabled(true);
        ScalingOff.setSelected(true);
        includeModifiedPosition = true;
    }

    private void NoModifiedButtonActionPerformed(java.awt.event.ActionEvent evt) {
        CenterModifiedButton.setEnabled(false);
        CustomModifiedButton.setEnabled(false);
        //CustomModifiedTF.setEditable(false);
        CustomModifiedTF.setEnabled(false);
        ScalingOn.setEnabled(false);
        ScalingOff.setEnabled(false);
        includeModifiedPosition = false;
    }

    private void CustomModifiedButtonActionPerformed(java.awt.event.ActionEvent evt) {
        //CustomModifiedTF.setEditable(true);
        CustomModifiedTF.setEnabled(true);
        modifiedPositionCenter = false;                               // false = "custom"
    }

    private void CenterModifiedButtonActionPerformed(java.awt.event.ActionEvent evt) {
        //   CustomModifiedTF.setEditable(false);
        CustomModifiedTF.setEnabled(false);
        modifiedPositionCenter = true;                                // true = "center"
    }

    private void CustomModifiedTFActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void colorChooserBackgroundActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.white);
        colorChooserBackground.setForeground(c);
        //Tf20s.setForeground(c);
        colorOfBackground = c;
        colorBackgroundChanged = true;
    }

    private void colorChooserAxesActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        colorChooserAxes.setForeground(c);
        //Tf20s.setForeground(c);
        colorOfAxes = c;
    }

    private void colorChooserModifiedActionPerformed(java.awt.event.ActionEvent evt) {
        Color c = JColorChooser.showDialog(null,
                "Select Color", Color.black);
        colorChooserModified.setForeground(c);
        //Tf20s.setForeground(c);
        colorOfModified = c;
    }

    private void FromInputButtonActionPerformed(java.awt.event.ActionEvent evt) {
        boolean isSelected = FromInputButton.isSelected();
        calculateFreq = true;
        if (isSelected) {
            BgFreqTF1.setText("");
            BgFreqTF2.setText("");
            BgFreqTF3.setText("");
            BgFreqTF4.setText("");
            BgFreqTF5.setText("");
            BgFreqTF6.setText("");
            BgFreqTF7.setText("");
            BgFreqTF8.setText("");
            BgFreqTF9.setText("");
            BgFreqTF10.setText("");
            BgFreqTF11.setText("");
            BgFreqTF12.setText("");
            BgFreqTF13.setText("");
            BgFreqTF14.setText("");
            BgFreqTF15.setText("");
            BgFreqTF16.setText("");
            BgFreqTF17.setText("");
            BgFreqTF18.setText("");
            BgFreqTF19.setText("");
            BgFreqTF20.setText("");
            BgFreqTF1.setEnabled(false);
            BgFreqTF2.setEnabled(false);
            BgFreqTF3.setEnabled(false);
            BgFreqTF4.setEnabled(false);
            BgFreqTF5.setEnabled(false);
            BgFreqTF6.setEnabled(false);
            BgFreqTF7.setEnabled(false);
            BgFreqTF8.setEnabled(false);
            BgFreqTF9.setEnabled(false);
            BgFreqTF10.setEnabled(false);
            BgFreqTF11.setEnabled(false);
            BgFreqTF12.setEnabled(false);
            BgFreqTF13.setEnabled(false);
            BgFreqTF14.setEnabled(false);
            BgFreqTF15.setEnabled(false);
            BgFreqTF16.setEnabled(false);
            BgFreqTF17.setEnabled(false);
            BgFreqTF18.setEnabled(false);
            BgFreqTF19.setEnabled(false);
            BgFreqTF20.setEnabled(false);
            SumFreqButton.setEnabled(false);
        }
    }

    private void ExportFreqLogoActionPerformed(java.awt.event.ActionEvent evt) {

        JFileChooser chooser = new JFileChooser();
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter bmpFilter = new FileNameExtensionFilter("Bitmap Image (.bmp)", "bmp");
        FileNameExtensionFilter pngFilter = new FileNameExtensionFilter("PNG File (.png)", "png");
        chooser.addChoosableFileFilter(bmpFilter);
        chooser.addChoosableFileFilter(pngFilter);
        int returnVal = chooser.showDialog(null, "Export Image");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Paint labels
            BufferedImage myPanelBI = (BufferedImage) probPanel.createImage(probPanel.getWidth(), probPanel.getHeight());

            Graphics myPanelGraphics = myPanelBI.getGraphics();
            probPanel.paint(myPanelGraphics);
            myPanelGraphics.dispose();

            //Draw final image
            //BufferedImage bufferedImage = new BufferedImage(labels.getWidth() + heatMap.getWidth(), heatMap.getHeight(), BufferedImage.TYPE_INT_RGB);
            Graphics g = myPanelBI.getGraphics();
            // g.drawImage(myPanelBI, 0, 0, null);
            g.drawImage(myPanelBI, probPanel.getWidth(), probPanel.getHeight(), null);
            g.dispose();
            //Write image to file
            String extension = ((FileNameExtensionFilter) chooser.getFileFilter()).getExtensions()[0];
            File file = new File(chooser.getSelectedFile().getPath() + "." + extension);
            try {
                ImageIO.write(myPanelBI, extension, file);
            } catch (IOException e) {
            }

        }
    }

    private void barsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        charactersOn = false;
        Tf1s.setEnabled(false);
        Tf2s.setEnabled(false);
        Tf3s.setEnabled(false);
        Tf4s.setEnabled(false);
        Tf5s.setEnabled(false);
        Tf6s.setEnabled(false);
        Tf7s.setEnabled(false);
        Tf8s.setEnabled(false);
        Tf9s.setEnabled(false);
        Tf10s.setEnabled(false);
        Tf11s.setEnabled(false);
        Tf12s.setEnabled(false);
        Tf13s.setEnabled(false);
        Tf14s.setEnabled(false);
        Tf15s.setEnabled(false);
        Tf16s.setEnabled(false);
        Tf17s.setEnabled(false);
        Tf18s.setEnabled(false);
        Tf19s.setEnabled(false);
        Tf20s.setEnabled(false);
    }

    private void charactersButtonActionPerformed(java.awt.event.ActionEvent evt) {
        charactersOn = true;
        Tf1s.setEnabled(true);
        Tf2s.setEnabled(true);
        Tf3s.setEnabled(true);
        Tf4s.setEnabled(true);
        Tf5s.setEnabled(true);
        Tf6s.setEnabled(true);
        Tf7s.setEnabled(true);
        Tf8s.setEnabled(true);
        Tf9s.setEnabled(true);
        Tf10s.setEnabled(true);
        Tf11s.setEnabled(true);
        Tf12s.setEnabled(true);
        Tf13s.setEnabled(true);
        Tf14s.setEnabled(true);
        Tf15s.setEnabled(true);
        Tf16s.setEnabled(true);
        Tf17s.setEnabled(true);
        Tf18s.setEnabled(true);
        Tf19s.setEnabled(true);
        Tf20s.setEnabled(true);
    }

    private void AAAlphaTFActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (probMatrix == null) {
            final JFrame frame = new JFrame();
            JOptionPane.showMessageDialog(frame, "Error: Create logos before exporting data.", "ERROR", JOptionPane.WARNING_MESSAGE);
        } else {
            JFileChooser fcSaveOutput = new JFileChooser();
            fcSaveOutput.setAcceptAllFileFilterUsed(false);
            FileNameExtensionFilter txtFilter = new FileNameExtensionFilter("Text File (.txt)", "txt");
            fcSaveOutput.addChoosableFileFilter(txtFilter);
            int returnVal = fcSaveOutput.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                PrintStream p = null;
                try {
                    String extension = ((FileNameExtensionFilter) fcSaveOutput.getFileFilter()).getExtensions()[0];
                    File file = new File(fcSaveOutput.getSelectedFile().getPath() + "." + extension);
                    p = new PrintStream(new BufferedOutputStream(new FileOutputStream(file)));

                    //Print reference probabilities for individual AAs
                    p.println("Reference Probabilities for Individual Amino Acids");
                    for (int i = 0; i < 20; i++) {
                        p.print(aa[i] + "\t");
                        p.println(groupBgFreq[groupings.size() + i]);
                    }
                    p.println();

                    //Print reference probabilities for groups
                    p.println("Reference Probabilities for Groups");
                    for (int i = 0; i < groupings.size(); i++) {
                        if (groupings.get(i).length() == 0) {
                        } else {
                            p.print(groupings.get(i) + "\t");
                            p.println(groupBgFreq[i] + "\t");
                        }
                    }
                    p.println();

                    //Print observed frequencies for individual Amino Acids
                    p.println("Observed Frequencies for Phosphorylated/Modified Amino Acids");
                    for (int i = 0; i < 20; i++) {
                        p.print(aa[i] + "\t");
                        for (int j = 0; j < lengthSeq; j++) {
                            p.print(probMatrix[groupings.size() + i][j] * 100.0 + "\t");
                        }
                        p.println();
                    }
                    p.println();

                    //Print observed frequencies for groups
                    p.println("Observed Frequencies for Groups");
                    for (int i = 0; i < groupings.size(); i++) {
                        if (groupings.get(i).length() == 0) {
                        } else {
                            p.print(groupings.get(i) + "\t");
                            for (int j = 0; j < lengthSeq; j++) {
                                p.print(probMatrix[i][j] * 100.0 + "\t");
                            }
                            p.println();
                        }
                    }
                    p.println();

                    //Print Chi-Square P-values

                } catch (FileNotFoundException ex) {
                    //Logger.getLogger(ProteinMatcher.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    p.close();
                }
            }
        }
    }

    private void ExportPvalueGraphActionPerformed(java.awt.event.ActionEvent evt) {

        //From ABDesigner HeatMap
        JFileChooser chooser = new JFileChooser();
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter bmpFilter = new FileNameExtensionFilter("Bitmap Image (.bmp)", "bmp");
        FileNameExtensionFilter pngFilter = new FileNameExtensionFilter("PNG File (.png)", "png");
        chooser.addChoosableFileFilter(bmpFilter);
        chooser.addChoosableFileFilter(pngFilter);
        int returnVal = chooser.showDialog(null, "Export Image"); //HeatMap.this, "Export Image");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //Paint labels
            BufferedImage myPanelBI = (BufferedImage) pvPanel.createImage(pvPanel.getWidth(), pvPanel.getHeight());

            Graphics myPanelGraphics = myPanelBI.getGraphics();
            pvPanel.paint(myPanelGraphics);
            myPanelGraphics.dispose();

            //Draw final image
            //BufferedImage bufferedImage = new BufferedImage(labels.getWidth() + heatMap.getWidth(), heatMap.getHeight(), BufferedImage.TYPE_INT_RGB);
            Graphics g = myPanelBI.getGraphics();
            // g.drawImage(myPanelBI, 0, 0, null);
            g.drawImage(myPanelBI, pvPanel.getWidth(), pvPanel.getHeight(), null);
            g.dispose();
            //Write image to file
            String extension = ((FileNameExtensionFilter) chooser.getFileFilter()).getExtensions()[0];
            File file = new File(chooser.getSelectedFile().getPath() + "." + extension);
            try {
                ImageIO.write(myPanelBI, extension, file);
            } catch (IOException e) {
            }

        }
    }

    private void g5ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void g12ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void g20ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void Tf3sActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        showFavored = true;
    }

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        showFavored = false;
    }

    private void BgFreqTF4ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    //Calculate Sum of Frequences:

    private void SumFreq() {
        double sum = 0;
        sum += Double.parseDouble(BgFreqTF1.getText());
        sum += Double.parseDouble(BgFreqTF2.getText());
        sum += Double.parseDouble(BgFreqTF3.getText());
        sum += Double.parseDouble(BgFreqTF4.getText());
        sum += Double.parseDouble(BgFreqTF5.getText());
        sum += Double.parseDouble(BgFreqTF6.getText());
        sum += Double.parseDouble(BgFreqTF7.getText());
        sum += Double.parseDouble(BgFreqTF8.getText());
        sum += Double.parseDouble(BgFreqTF9.getText());
        sum += Double.parseDouble(BgFreqTF10.getText());
        sum += Double.parseDouble(BgFreqTF11.getText());
        sum += Double.parseDouble(BgFreqTF12.getText());
        sum += Double.parseDouble(BgFreqTF13.getText());
        sum += Double.parseDouble(BgFreqTF14.getText());
        sum += Double.parseDouble(BgFreqTF15.getText());
        sum += Double.parseDouble(BgFreqTF16.getText());
        sum += Double.parseDouble(BgFreqTF17.getText());
        sum += Double.parseDouble(BgFreqTF18.getText());
        sum += Double.parseDouble(BgFreqTF19.getText());
        sum += Double.parseDouble(BgFreqTF20.getText());
        double sumRound = Math.rint(sum);
        int sumInt = (int) sumRound;
        sumValueLabel.setText(Integer.toString(sumInt));

    }

    @Override
    public void init() {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                new NewJFrame().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify                     
    private javax.swing.JFormattedTextField AAAlphaTF;
    private javax.swing.JTextField BgFreqTF1;
    private javax.swing.JTextField BgFreqTF10;
    private javax.swing.JTextField BgFreqTF11;
    private javax.swing.JTextField BgFreqTF12;
    private javax.swing.JTextField BgFreqTF13;
    private javax.swing.JTextField BgFreqTF14;
    private javax.swing.JTextField BgFreqTF15;
    private javax.swing.JTextField BgFreqTF16;
    private javax.swing.JTextField BgFreqTF17;
    private javax.swing.JTextField BgFreqTF18;
    private javax.swing.JTextField BgFreqTF19;
    private javax.swing.JTextField BgFreqTF2;
    private javax.swing.JTextField BgFreqTF20;
    private javax.swing.JTextField BgFreqTF3;
    private javax.swing.JTextField BgFreqTF4;
    private javax.swing.JTextField BgFreqTF5;
    private javax.swing.JTextField BgFreqTF6;
    private javax.swing.JTextField BgFreqTF7;
    private javax.swing.JTextField BgFreqTF8;
    private javax.swing.JTextField BgFreqTF9;
    private javax.swing.JRadioButton CenterModifiedButton;
    private javax.swing.JRadioButton ChargeButton;
    private javax.swing.JButton CreateLogo;
    private javax.swing.JRadioButton CustomFreqButton;
    private javax.swing.JRadioButton CustomGroupButton;
    private javax.swing.JRadioButton CustomModifiedButton;
    private javax.swing.JFormattedTextField CustomModifiedTF;
    private javax.swing.JRadioButton EquiprobableButton;
    private javax.swing.JButton ExportFreqLogo;
    private javax.swing.JButton ExportICLogo;
    private javax.swing.JButton ExportPvalueGraph;
    public javax.swing.JPanel FreqOutput;
    private javax.swing.JPanel FreqOutput2;
    private javax.swing.JRadioButton FromInputButton;
    private javax.swing.JRadioButton HumanButton;
    private javax.swing.JLabel LabelA;
    private javax.swing.JLabel LabelC;
    private javax.swing.JLabel LabelD;
    private javax.swing.JLabel LabelE;
    private javax.swing.JLabel LabelF;
    private javax.swing.JLabel LabelG;
    private javax.swing.JLabel LabelH;
    private javax.swing.JLabel LabelI;
    private javax.swing.JLabel LabelK;
    private javax.swing.JLabel LabelL;
    private javax.swing.JLabel LabelM;
    private javax.swing.JLabel LabelN;
    private javax.swing.JLabel LabelP;
    private javax.swing.JLabel LabelQ;
    private javax.swing.JLabel LabelR;
    private javax.swing.JLabel LabelS;
    private javax.swing.JLabel LabelT;
    private javax.swing.JLabel LabelV;
    private javax.swing.JLabel LabelW;
    private javax.swing.JLabel LabelY;
    public javax.swing.JPanel LogoOutput;
    private javax.swing.JPanel LogoOutput2;
    private javax.swing.JTabbedPane LogoTabPane;
    private javax.swing.JRadioButton NoModifiedButton;
    private javax.swing.JRadioButton NoneButton;
    public javax.swing.JPanel PvalueOutput;
    private javax.swing.JPanel PvalueOutput2;
    private javax.swing.JRadioButton RatButton;
    private javax.swing.JRadioButton ReplaceSizeButton;
    private javax.swing.JRadioButton ScalingOff;
    private javax.swing.JRadioButton ScalingOn;
    private javax.swing.JTextArea SequenceInput;
    private javax.swing.JButton SumFreqButton;
    private javax.swing.JComboBox Tf10s;
    private javax.swing.JComboBox Tf11s;
    private javax.swing.JComboBox Tf12s;
    private javax.swing.JComboBox Tf13s;
    private javax.swing.JComboBox Tf14s;
    private javax.swing.JComboBox Tf15s;
    private javax.swing.JComboBox Tf16s;
    private javax.swing.JComboBox Tf17s;
    private javax.swing.JComboBox Tf18s;
    private javax.swing.JComboBox Tf19s;
    private javax.swing.JComboBox Tf1s;
    private javax.swing.JComboBox Tf20s;
    private javax.swing.JComboBox Tf2s;
    private javax.swing.JComboBox Tf3s;
    private javax.swing.JComboBox Tf4s;
    private javax.swing.JComboBox Tf5s;
    private javax.swing.JComboBox Tf6s;
    private javax.swing.JComboBox Tf7s;
    private javax.swing.JComboBox Tf8s;
    private javax.swing.JComboBox Tf9s;
    private javax.swing.JRadioButton YesModifiedButton;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JRadioButton barsButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.JRadioButton charactersButton;
    private javax.swing.JButton color1;
    private javax.swing.JButton color10;
    private javax.swing.JButton color11;
    private javax.swing.JButton color12;
    private javax.swing.JButton color13;
    private javax.swing.JButton color14;
    private javax.swing.JButton color15;
    private javax.swing.JButton color16;
    private javax.swing.JButton color17;
    private javax.swing.JButton color18;
    private javax.swing.JButton color19;
    private javax.swing.JButton color2;
    private javax.swing.JButton color20;
    private javax.swing.JButton color3;
    private javax.swing.JButton color4;
    private javax.swing.JButton color5;
    private javax.swing.JButton color6;
    private javax.swing.JButton color7;
    private javax.swing.JButton color8;
    private javax.swing.JButton color9;
    private javax.swing.JButton colorChooserAxes;
    private javax.swing.JButton colorChooserBackground;
    private javax.swing.JButton colorChooserModified;
    private javax.swing.JButton exportButton;
    private javax.swing.JTextField g1;
    private javax.swing.JTextField g10;
    private javax.swing.JTextField g11;
    private javax.swing.JTextField g12;
    private javax.swing.JTextField g13;
    private javax.swing.JTextField g14;
    private javax.swing.JTextField g15;
    private javax.swing.JTextField g16;
    private javax.swing.JTextField g17;
    private javax.swing.JTextField g18;
    private javax.swing.JTextField g19;
    private javax.swing.JTextField g2;
    private javax.swing.JTextField g20;
    private javax.swing.JTextField g3;
    private javax.swing.JTextField g4;
    private javax.swing.JTextField g5;
    private javax.swing.JTextField g6;
    private javax.swing.JTextField g7;
    private javax.swing.JTextField g8;
    private javax.swing.JTextField g9;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel numPeptideLabel;
    private javax.swing.JLabel peptideLengthLabel;
//    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JLabel sumValueLabel;
    // End of variables declaration                   
}
